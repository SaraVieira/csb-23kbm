{"version":3,"sources":["webpack://lib_dojo_codesandbox_template/WeakMap.ts","webpack://lib_dojo_codesandbox_template/Set.ts","webpack://lib_dojo_codesandbox_template/object.ts","webpack://lib_dojo_codesandbox_template/Map.ts","webpack://lib_dojo_codesandbox_template/util.ts","webpack://lib_dojo_codesandbox_template/array.ts","webpack://lib_dojo_codesandbox_template/Destroyable.ts","webpack://lib_dojo_codesandbox_template/Evented.ts","webpack://lib_dojo_codesandbox_template/Registry.ts","webpack://lib_dojo_codesandbox_template/diff.ts","webpack://lib_dojo_codesandbox_template/RegistryHandler.ts","webpack://lib_dojo_codesandbox_template/vdom.ts","webpack://lib_dojo_codesandbox_template/./src/widgets/Hello.tsx","webpack://lib_dojo_codesandbox_template/./src/main.tsx","webpack://lib_dojo_codesandbox_template/./src/widgets/styles/Hello.m.css"],"names":["shim_WeakMap","global","WeakMap","shim_Set","Set","object_assign","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","is","keys","getOwnPropertyDescriptors","entries","values","Object","assign","Map","shim_Map","wrapNative","nativeFunction","target","args","apply","from","of","copyWithin","fill","find","findIndex","includes","flat","flatMap","Array","prototype","noop","Promise","resolve","destroyed","Error","Destroyable_Destroyable","[object Object]","this","handles","handle","_handles","push","splice","indexOf","destroy","forEach","own","regexMap","Evented_Evented","listenersMap","event","methods","type","globString","targetString","regex","has","get","RegExp","replace","set","test","isGlobMatch","method","call","listener","isArray","map","_addListener","listeners","WIDGET_BASE_TYPE","isWidgetBaseConstructor","item","Boolean","_type","isWidgetFunction","isWidget","isWNodeFactory","node","isFactory","Registry_Registry","widgetLabel","emit","action","label","undefined","_widgetRegistry","toString","then","widgetCtor","emitLoadedEvent","error","injectorFactory","_injectorRegistry","invalidator","injectorItem","injector","promise","hasOwnProperty","default","isWidgetConstructorDefaultExport","hasInjector","isObjectOrArray","value","reference","previousProperty","newProperty","changed","auto","depth","result","ignore","validOldProperty","validNewProperty","previousKeys","newKeys","length","some","key","shallow","core_RegistryHandler","super","_registry","_registryWidgetLabelMap","_registryInjectorLabelMap","baseRegistry","delete","base","widget","define","defineInjector","globalPrecedence","_get","getFunctionName","labelMap","registries","i","registry","registeredLabels","on","EMPTY_ARRAY","nodeOperations","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","WNODE","VNODE","DOMVNODE","scope","setRendering","rendering","isTextNode","nodeType","isWNodeWrapper","child","isWNode","isVNodeWrapper","isVNode","isVirtualWrapper","tag","isBodyWrapper","wrapper","isHeadWrapper","isSpecialWrapper","isDomVNode","w","widgetConstructorOrNode","properties","children","__children__","widgetConstructor","v","propertiesOrChildren","deferredPropertiesCallback","classes","styles","newProperties","__rest","_a","nodeClasses","nodeStyles","nodeProperties","REGISTRY_ITEM","FromRegistry","__properties__","tsx","Infinity","__autoRegistryItem","name","buildPreviousProperties","domNode","current","diffType","attributes","deferredProperties","events","propName","attrName","getAttribute","reduce","props","property","same","dnode1","dnode2","widgetConstructor1","registryItem","widgetConstructor2","props1","props2","instance","every","findIndexOfChild","sameAs","start","createClassPropValue","classNames","className","updateAttribute","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","arrayFrom","arr","slice","createFactory","callback","middlewares","factory","middlewareName","middleware","withType","create","returns","widgetInstanceMap","widgetMetaMap","requestedDomNodes","wrapperId","metaId","addNodeToMap","id","widgetMeta","nodeMap","destroyHandles","meta","destroyMap","middlewareIds","size","clear","widgetId","split","mountNode","contains","document","body","add","propertyName","propertiesOrDiff","diff","customDiffMap","customDiffProperties","propertyDiffMap","originalProperties","destroyFunction","registryHandler","isDeferred","deferRefs","wrapFunctionProperties","propertyNames","unwrap","vdom_renderer","renderer","_renderScheduled","parentInvalidate","_appWrapperId","_mountOptions","sync","merge","transition","_invalidationQueue","_processQueue","_deferredProcessQueue","_applicationQueue","_eventMap","_idToWrapperMap","_wrapperSiblingMap","_idToChildrenWrappers","_insertBeforeMap","_nodeToWrapperMap","_deferredRenderCallbacks","_allMergedNodes","_deferredProcessIds","nodeOperation","propValue","previousValue","updateEvent","eventName","currentValue","previousEvent","removeEventListener","evt","addEventListener","removeOrphanedEvents","previousProperties","onlyEvents","isEvent","substr","eventCallback","resolveRegistryItem","owningNode","instanceData","registryLabel","isLazyDefine","renderedToWrapper","rendered","parent","currentParent","requiresInsertBefore","hasPreviousSiblings","wrappedRendered","hasParentWNode","hasVirtualParentNode","hasCurrentParentChildren","insertBefore","previousItem","nodes","pop","mapNodeToInstance","renderedItem","text","order","parentId","exitAnimation","hasAnimations","nextParent","owningId","runDeferredProperties","next","processProperties","findInsertBefore","searchNode","nextSibling","childDomWrapperId","findDomNodeOnParentWrapper","childWrapper","parentNode","setValue","domValue","onInputValue","onSelectValue","setProperties","currentProperties","nextWrapper","includesEventsAndAttributes","propNames","propCount","previousClassString","currentClassString","merged","domClasses","styleNames","styleCount","j","styleName","newStyleValue","style","tagName","lastIndexOf","_createDeferredRenderCallback","callbacks","shift","_scheduleDeferredRenderCallbacks","run","requestAnimationFrame","previousAttributes","attrNames","attrCount","updateAttributes","_schedule","_runInvalidationQueue","getWNodeWrapper","invalidationQueue","previouslyRendered","sort","a","b","_runProcessQueue","sibling","_updateWidget","_runDomInstructionQueue","_cleanUpMergedNodes","mergedNode","removeChild","_process","reverse","parentDomNode","onAttach","parentElement","enterAnimation","enterAnimationActive","enter","owningWrapper","nodeHandler","inserted","currentDomNode","replaceChild","exitAnimationActive","exit","attached","addRoot","onDetach","createKeyMap","wrappers","mergeNodes","oldIndex","newIndex","currentLength","nextLength","instructions","currentKeys","nextKeys","currentWrapper","domElement","toUpperCase","mergeNodeIndex","_processMergeNodes","_processOne","dom","currentNode","parentWrapper","findParentDomNode","isVirtual","isBody","isHead","data","createTextNode","childNodes","head","createElementNS","createElement","_createDom","invalidate","Constructor","dirty","__setProperties__","__setChildren__","__render__","widgetName","propertiesCalled","ids","resolveMiddleware","results","uniqueId","payload","createWidgetOptions","resolvedMiddleware","_createWidget","currentChildren","_updateDom","isSpecial","remove","specialIds","wrapperChildren","_removeDom","processResult","_removeWidget","didRender","customProperties","diffMap","runDiffs","ignoreProperties","propertiesDiff","childId","mount","mountOptions","renderResult","wrapNodes","siblingId","unmount","cancelAnimationFrame","widgets_Hello","Hello_factory","Hello_m","main_App","main_factory","module","exports"," _key","root"],"mappings":"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","file":"main.87728a87dd7e92aa73de.bundle.js","sourcesContent":["import global from './global';\n`!has('es6-iterator')`;\nimport { isArrayLike, Iterable } from './iterator';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface WeakMap<K extends object, V> {\n\t/**\n\t * Remove a `key` from the map\n\t *\n\t * @param key The key to remove\n\t * @return `true` if the value was removed, otherwise `false`\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Retrieve the value, based on the supplied `key`\n\t *\n\t * @param key The key to retrieve the `value` for\n\t * @return the `value` based on the `key` if found, otherwise `false`\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Determines if a `key` is present in the map\n\t *\n\t * @param key The `key` to check\n\t * @return `true` if the key is part of the map, otherwise `false`.\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Set a `value` for a particular `key`.\n\t *\n\t * @param key The `key` to set the `value` for\n\t * @param value The `value` to set\n\t * @return the instances\n\t */\n\tset(key: K, value: V): this;\n\n\treadonly [Symbol.toStringTag]: 'WeakMap';\n}\n\nexport interface WeakMapConstructor {\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t */\n\tnew (): WeakMap<object, any>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable?: [K, V][]): WeakMap<K, V>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable: Iterable<[K, V]>): WeakMap<K, V>;\n\n\treadonly prototype: WeakMap<object, any>;\n}\n\nexport let WeakMap: WeakMapConstructor = global.WeakMap;\n\ninterface Entry<K, V> {\n\tkey: K;\n\tvalue: V;\n}\n\nif (!has('es6-weakmap')) {\n\tconst DELETED: any = {};\n\n\tconst getUID = function getUID(): number {\n\t\treturn Math.floor(Math.random() * 100000000);\n\t};\n\n\tconst generateName = (function() {\n\t\tlet startId = Math.floor(Date.now() % 100000000);\n\n\t\treturn function generateName(): string {\n\t\t\treturn '__wm' + getUID() + (startId++ + '__');\n\t\t};\n\t})();\n\n\tWeakMap = global.WeakMap = class WeakMap<K, V> {\n\t\tprivate readonly _name: string;\n\t\tprivate readonly _frozenEntries: Entry<K, V>[];\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tthis._name = generateName();\n\n\t\t\tthis._frozenEntries = [];\n\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst item = iterable[i];\n\t\t\t\t\t\tthis.set(item[0], item[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const [key, value] of iterable) {\n\t\t\t\t\t\tthis.set(key, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate _getFrozenEntryIndex(key: any): number {\n\t\t\tfor (let i = 0; i < this._frozenEntries.length; i++) {\n\t\t\t\tif (this._frozenEntries[i].key === key) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn -1;\n\t\t}\n\n\t\tdelete(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\tentry.value = DELETED;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\tthis._frozenEntries.splice(frozenIndex, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tget(key: any): V | undefined {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\treturn entry.value;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn this._frozenEntries[frozenIndex].value;\n\t\t\t}\n\t\t}\n\n\t\thas(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tset(key: any, value?: any): this {\n\t\t\tif (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n\t\t\t\tthrow new TypeError('Invalid value used as weak map key');\n\t\t\t}\n\t\t\tlet entry: Entry<K, V> = key[this._name];\n\t\t\tif (!entry || entry.key !== key) {\n\t\t\t\tentry = Object.create(null, {\n\t\t\t\t\tkey: { value: key }\n\t\t\t\t});\n\n\t\t\t\tif (Object.isFrozen(key)) {\n\t\t\t\t\tthis._frozenEntries.push(entry);\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty(key, this._name, {\n\t\t\t\t\t\tvalue: entry\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tentry.value = value;\n\t\t\treturn this;\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'WeakMap' = 'WeakMap';\n\t};\n}\n\nexport default WeakMap;\n","import global from './global';\n`!has('es6-iterator')`;\nimport { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface Set<T> {\n\t/**\n\t * Adds a `value` to the `Set`\n\t *\n\t * @param value The value to add to the set\n\t * @returns The instance of the `Set`\n\t */\n\tadd(value: T): this;\n\n\t/**\n\t * Removes all the values from the `Set`.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Removes a `value` from the set\n\t *\n\t * @param value The value to be removed\n\t * @returns `true` if the value was removed\n\t */\n\tdelete(value: T): boolean;\n\n\t/**\n\t * Returns an iterator that yields each entry.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[T, T]>;\n\n\t/**\n\t * Executes a given function for each set entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated `Set` instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any): void;\n\n\t/**\n\t * Identifies if a value is part of the set.\n\t *\n\t * @param value The value to check\n\t * @returns `true` if the value is part of the set otherwise `false`\n\t */\n\thas(value: T): boolean;\n\n\t/**\n\t * Despite its name, returns an iterable of the values in the set,\n\t */\n\tkeys(): IterableIterator<T>;\n\n\t/**\n\t * Returns the number of values in the `Set`.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterable of values in the set.\n\t */\n\tvalues(): IterableIterator<T>;\n\n\t/** Iterates over values in the set. */\n\t[Symbol.iterator](): IterableIterator<T>;\n\n\treadonly [Symbol.toStringTag]: 'Set';\n}\n\nexport interface SetConstructor {\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t */\n\tnew (): Set<any>;\n\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t *\n\t * @param iterator The iterable structure to initialize the set with\n\t */\n\tnew <T>(iterator?: T[]): Set<T>;\n\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t *\n\t * @param iterator The iterable structure to initialize the set with\n\t */\n\tnew <T>(iterator: Iterable<T>): Set<T>;\n\n\treadonly prototype: Set<any>;\n}\n\nexport let Set: SetConstructor = global.Set;\n\nif (!has('es6-set')) {\n\tSet = global.Set = class Set<T> {\n\t\tprivate readonly _setData: T[] = [];\n\n\t\tstatic [Symbol.species] = Set;\n\n\t\tconstructor(iterable?: ArrayLike<T> | Iterable<T>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tthis.add(iterable[i]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tadd(value: T): this {\n\t\t\tif (this.has(value)) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tthis._setData.push(value);\n\t\t\treturn this;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._setData.length = 0;\n\t\t}\n\n\t\tdelete(value: T): boolean {\n\t\t\tconst idx = this._setData.indexOf(value);\n\t\t\tif (idx === -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._setData.splice(idx, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[T, T]> {\n\t\t\treturn new ShimIterator<[any, any]>(this._setData.map<[any, any]>((value) => [value, value]));\n\t\t}\n\n\t\tforEach(callbackfn: (value: T, index: T, set: Set<T>) => void, thisArg?: any): void {\n\t\t\tconst iterator = this.values();\n\t\t\tlet result = iterator.next();\n\t\t\twhile (!result.done) {\n\t\t\t\tcallbackfn.call(thisArg, result.value, result.value, this);\n\t\t\t\tresult = iterator.next();\n\t\t\t}\n\t\t}\n\n\t\thas(value: T): boolean {\n\t\t\treturn this._setData.indexOf(value) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._setData.length;\n\t\t}\n\n\t\tvalues(): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Set' = 'Set';\n\t};\n}\n\nexport default Set;\n","import has from '../core/has';\n\nexport interface ObjectAssign {\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source The source object from which to copy properties.\n\t */\n\t<T, U>(target: T, source: U): T & U;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t */\n\t<T, U, V>(target: T, source1: U, source2: V): T & U & V;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t * @param source3 The third source object from which to copy properties.\n\t */\n\t<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param sources One or more source objects from which to copy properties\n\t */\n\t(target: object, ...sources: any[]): any;\n}\n\nexport interface ObjectEnteries {\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T extends { [key: string]: any }, K extends keyof T>(o: T): [keyof T, T[K]][];\n\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): [string, any][];\n}\n\nexport interface ObjectGetOwnPropertyDescriptors {\n\t<T>(o: T): { [K in keyof T]: PropertyDescriptor };\n\t(o: any): { [key: string]: PropertyDescriptor };\n}\n\nexport interface ObjectValues {\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T>(o: { [s: string]: T }): T[];\n\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): any[];\n}\n\nexport let assign: ObjectAssign;\n\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor: <T, K extends keyof T>(o: T, propertyKey: K) => PropertyDescriptor | undefined;\n\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames: (o: any) => string[];\n\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols: (o: any) => symbol[];\n\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is: (value1: any, value2: any) => boolean;\n\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys: (o: object) => string[];\n\n/* ES7 Object static methods */\n\nexport let getOwnPropertyDescriptors: ObjectGetOwnPropertyDescriptors;\n\nexport let entries: ObjectEnteries;\n\nexport let values: ObjectValues;\n\nif (!has('es6-object')) {\n\tconst keys = Object.keys.bind(Object);\n\tObject.keys = function symbolAwareKeys(o: object): string[] {\n\t\treturn keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tObject.assign = function assign(target: any, ...sources: any[]) {\n\t\tif (target == null) {\n\t\t\t// TypeError if undefined or null\n\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t}\n\n\t\tconst to = Object(target);\n\t\tsources.forEach((nextSource) => {\n\t\t\tif (nextSource) {\n\t\t\t\t// Skip over if undefined or null\n\t\t\t\tkeys(nextSource).forEach((nextKey) => {\n\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn to;\n\t};\n\n\tconst getOwnPropertyNames = Object.getOwnPropertyNames.bind(Object);\n\tObject.getOwnPropertyNames = function symbolAwareGetOwnPropertyNames(o: any): string[] {\n\t\treturn getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tObject.getOwnPropertySymbols = function getOwnPropertySymbols(o: any): symbol[] {\n\t\treturn getOwnPropertyNames(o)\n\t\t\t.filter((key) => Boolean(key.match(/^@@.+/)))\n\t\t\t.map((key) => Symbol.for(key.substring(2)));\n\t};\n\n\tObject.is = function is(value1: any, value2: any): boolean {\n\t\tif (value1 === value2) {\n\t\t\treturn value1 !== 0 || 1 / value1 === 1 / value2; // -0\n\t\t}\n\t\treturn value1 !== value1 && value2 !== value2; // NaN\n\t};\n}\n\nif (!has('es2017-object')) {\n\tObject.getOwnPropertyDescriptors = function getOwnPropertyDescriptors<T>(\n\t\to: T\n\t): { [P in keyof T]: TypedPropertyDescriptor<T[P]> } & { [x: string]: PropertyDescriptor } {\n\t\treturn Object.getOwnPropertyNames(o).reduce(\n\t\t\t(previous, key) => {\n\t\t\t\tprevious[key] = Object.getOwnPropertyDescriptor(o, key)!;\n\t\t\t\treturn previous;\n\t\t\t},\n\t\t\t{} as { [x: string]: PropertyDescriptor }\n\t\t) as { [P in keyof T]: TypedPropertyDescriptor<T[P]> } & { [x: string]: PropertyDescriptor };\n\t};\n\n\tObject.entries = function entries(o: any): [string, any][] {\n\t\treturn keys(o).map((key) => [key, o[key]] as [string, any]);\n\t};\n\n\tObject.values = function values(o: any): any[] {\n\t\treturn keys(o).map((key) => o[key]);\n\t};\n}\n\nassign = Object.assign;\ngetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\ngetOwnPropertyNames = Object.getOwnPropertyNames;\ngetOwnPropertySymbols = Object.getOwnPropertySymbols;\nis = Object.is;\nkeys = Object.keys;\ngetOwnPropertyDescriptors = Object.getOwnPropertyDescriptors;\nentries = Object.entries;\nvalues = Object.values;\n\nexport default Object;\n","`!has('es6-iterator')`;\nimport { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface Map<K, V> {\n\t/**\n\t * Deletes all keys and their associated values.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Deletes a given key and its associated value.\n\t *\n\t * @param key The key to delete\n\t * @return true if the key exists, false if it does not\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Returns an iterator that yields each key/value pair as an array.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[K, V]>;\n\n\t/**\n\t * Executes a given function for each map entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated Map instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;\n\n\t/**\n\t * Returns the value associated with a given key.\n\t *\n\t * @param key The key to look up\n\t * @return The value if one exists or undefined\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Returns an iterator that yields each key in the map.\n\t *\n\t * @return An iterator containing the instance's keys.\n\t */\n\tkeys(): IterableIterator<K>;\n\n\t/**\n\t * Checks for the presence of a given key.\n\t *\n\t * @param key The key to check for\n\t * @return true if the key exists, false if it does not\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Sets the value associated with a given key.\n\t *\n\t * @param key The key to define a value to\n\t * @param value The value to assign\n\t * @return The Map instance\n\t */\n\tset(key: K, value: V): this;\n\n\t/**\n\t * Returns the number of key / value pairs in the Map.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterator that yields each value in the map.\n\t *\n\t * @return An iterator containing the instance's values.\n\t */\n\tvalues(): IterableIterator<V>;\n\n\t/** Returns an iterable of entries in the map. */\n\t[Symbol.iterator](): IterableIterator<[K, V]>;\n\n\treadonly [Symbol.toStringTag]: string;\n}\n\nexport interface MapConstructor {\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t */\n\tnew (): Map<any, any>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator?: [K, V][]): Map<K, V>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator: Iterable<[K, V]>): Map<K, V>;\n\n\treadonly prototype: Map<any, any>;\n\n\treadonly [Symbol.species]: MapConstructor;\n}\n\nexport let Map: MapConstructor = global.Map;\n\nif (!has('es6-map')) {\n\tMap = global.Map = class Map<K, V> {\n\t\tprotected readonly _keys: K[] = [];\n\t\tprotected readonly _values: V[] = [];\n\n\t\t/**\n\t\t * An alternative to Array.prototype.indexOf using Object.is\n\t\t * to check for equality. See http://mzl.la/1zuKO2V\n\t\t */\n\t\tprotected _indexOfKey(keys: K[], key: K): number {\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tif (objectIs(keys[i], key)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\tstatic [Symbol.species] = Map;\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst value = iterable[i];\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._keys.length;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._keys.length = this._values.length = 0;\n\t\t}\n\n\t\tdelete(key: K): boolean {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\tif (index < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._keys.splice(index, 1);\n\t\t\tthis._values.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[K, V]> {\n\t\t\tconst values = this._keys.map(\n\t\t\t\t(key: K, i: number): [K, V] => {\n\t\t\t\t\treturn [key, this._values[i]];\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn new ShimIterator(values);\n\t\t}\n\n\t\tforEach(callback: (value: V, key: K, mapInstance: Map<K, V>) => any, context?: {}) {\n\t\t\tconst keys = this._keys;\n\t\t\tconst values = this._values;\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tcallback.call(context, values[i], keys[i], this);\n\t\t\t}\n\t\t}\n\n\t\tget(key: K): V | undefined {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\treturn index < 0 ? undefined : this._values[index];\n\t\t}\n\n\t\thas(key: K): boolean {\n\t\t\treturn this._indexOfKey(this._keys, key) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<K> {\n\t\t\treturn new ShimIterator(this._keys);\n\t\t}\n\n\t\tset(key: K, value: V): Map<K, V> {\n\t\t\tlet index = this._indexOfKey(this._keys, key);\n\t\t\tindex = index < 0 ? this._keys.length : index;\n\t\t\tthis._keys[index] = key;\n\t\t\tthis._values[index] = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tvalues(): IterableIterator<V> {\n\t\t\treturn new ShimIterator(this._values);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\t\treturn this.entries();\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Map' = 'Map';\n\t};\n}\n\nexport default Map;\n","/**\n * Helper function to generate a value property descriptor\n *\n * @param value        The value the property descriptor should be set to\n * @param enumerable   If the property should be enumberable, defaults to false\n * @param writable     If the property should be writable, defaults to true\n * @param configurable If the property should be configurable, defaults to true\n * @return             The property descriptor object\n */\nexport function getValueDescriptor<T>(\n\tvalue: T,\n\tenumerable: boolean = false,\n\twritable: boolean = true,\n\tconfigurable: boolean = true\n): TypedPropertyDescriptor<T> {\n\treturn {\n\t\tvalue: value,\n\t\tenumerable: enumerable,\n\t\twritable: writable,\n\t\tconfigurable: configurable\n\t};\n}\n\n/**\n * A helper function which wraps a function where the first argument becomes the scope\n * of the call\n *\n * @param nativeFunction The source function to be wrapped\n */\nexport function wrapNative<T, U, R>(nativeFunction: (arg1: U) => R): (target: T, arg1: U) => R;\nexport function wrapNative<T, U, V, R>(nativeFunction: (arg1: U, arg2: V) => R): (target: T, arg1: U, arg2: V) => R;\nexport function wrapNative<T, U, V, W, R>(\n\tnativeFunction: (arg1: U, arg2: V, arg3: W) => R\n): (target: T, arg1: U, arg2: V, arg3: W) => R;\nexport function wrapNative<T, U, V, W, X, R>(\n\tnativeFunction: (arg1: U, arg2: V, arg3: W) => R\n): (target: T, arg1: U, arg2: V, arg3: W) => R;\nexport function wrapNative<T, U, V, W, X, Y, R>(\n\tnativeFunction: (arg1: U, arg2: V, arg3: W, arg4: Y) => R\n): (target: T, arg1: U, arg2: V, arg3: W, arg4: Y) => R;\nexport function wrapNative(nativeFunction: (...args: any[]) => any): (target: any, ...args: any[]) => any {\n\treturn function(target: any, ...args: any[]): any {\n\t\treturn nativeFunction.apply(target, args);\n\t};\n}\n","`!has('es6-iterator')`;\nimport { isArrayLike, isIterable, Iterable } from './iterator';\nimport has from '../core/has';\nimport { wrapNative } from './support/util';\n\nexport interface MapCallback<T, U> {\n\t/**\n\t * A callback function when mapping\n\t *\n\t * @param element The element that is currently being mapped\n\t * @param index The current index of the element\n\t */\n\t(element: T, index: number): U;\n}\n\nexport interface FindCallback<T> {\n\t/**\n\t * A callback function when using find\n\t *\n\t * @param element The element that is currenty being analysed\n\t * @param index The current index of the element that is being analysed\n\t * @param array The source array\n\t */\n\t(element: T, index: number, array: ArrayLike<T>): boolean;\n}\n\n/* ES6 Array static methods */\n\nexport interface From {\n\t/**\n\t * The Array.from() method creates a new Array instance from an array-like or iterable object.\n\t *\n\t * @param source An array-like or iterable object to convert to an array\n\t * @param mapFunction A map function to call on each element in the array\n\t * @param thisArg The execution context for the map function\n\t * @return The new Array\n\t */\n\t<T, U>(source: ArrayLike<T> | Iterable<T>, mapFunction: MapCallback<T, U>, thisArg?: any): Array<U>;\n\n\t/**\n\t * The Array.from() method creates a new Array instance from an array-like or iterable object.\n\t *\n\t * @param source An array-like or iterable object to convert to an array\n\t * @return The new Array\n\t */\n\t<T>(source: ArrayLike<T> | Iterable<T>): Array<T>;\n}\n\nexport interface Flat {\n\t/**\n\t * Returns a new array with all sub-array elements concatenated into it recursively up to the\n\t * specified depth.\n\t *\n\t * @param depth The maximum recursion depth\n\t */\n\t<U>(\n\t\tarr:\n\t\t\t| ReadonlyArray<U[][][][]>\n\t\t\t| ReadonlyArray<ReadonlyArray<U[][][]>>\n\t\t\t| ReadonlyArray<ReadonlyArray<U[][]>[]>\n\t\t\t| ReadonlyArray<ReadonlyArray<U[]>[][]>\n\t\t\t| ReadonlyArray<ReadonlyArray<U>[][][]>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U[][]>>>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U>[][]>>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>[][]>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U>[]>[]>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U[]>>[]>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U[]>[]>>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U[]>>>>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>[]>>>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>[]>>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>>[]>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>>>>,\n\t\tdepth: 4\n\t): U[];\n\n\t/**\n\t * Returns a new array with all sub-array elements concatenated into it recursively up to the\n\t * specified depth.\n\t *\n\t * @param depth The maximum recursion depth\n\t */\n\t<U>(\n\t\tarr:\n\t\t\t| ReadonlyArray<U[][][]>\n\t\t\t| ReadonlyArray<ReadonlyArray<U>[][]>\n\t\t\t| ReadonlyArray<ReadonlyArray<U[]>[]>\n\t\t\t| ReadonlyArray<ReadonlyArray<U[][]>>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U[]>>>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U>[]>>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>[]>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>>>,\n\t\tdepth: 3\n\t): U[];\n\n\t/**\n\t * Returns a new array with all sub-array elements concatenated into it recursively up to the\n\t * specified depth.\n\t *\n\t * @param depth The maximum recursion depth\n\t */\n\t<U>(\n\t\tarr:\n\t\t\t| ReadonlyArray<U[][]>\n\t\t\t| ReadonlyArray<ReadonlyArray<U[]>>\n\t\t\t| ReadonlyArray<ReadonlyArray<U>[]>\n\t\t\t| ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>>,\n\t\tdepth: 2\n\t): U[];\n\n\t/**\n\t * Returns a new array with all sub-array elements concatenated into it recursively up to the\n\t * specified depth.\n\t *\n\t * @param depth The maximum recursion depth\n\t */\n\t<U>(arr: ReadonlyArray<U[]> | ReadonlyArray<ReadonlyArray<U>>, depth?: 1): U[];\n\n\t/**\n\t * Returns a new array with all sub-array elements concatenated into it recursively up to the\n\t * specified depth.\n\t *\n\t * @param depth The maximum recursion depth\n\t */\n\t<U>(arr: ReadonlyArray<U>, depth: 0): U[];\n\n\t/**\n\t * Returns a new array with all sub-array elements concatenated into it recursively up to the\n\t * specified depth. If no depth is provided, flat method defaults to the depth of 1.\n\t *\n\t * @param depth The maximum recursion depth\n\t */\n\t<U>(arr: any[], depth?: number): any[];\n}\n\nexport interface FlatMap {\n\t/**\n\t * Calls a defined callback function on each element of an array. Then, flattens the result into\n\t * a new array.\n\t * This is identical to a map followed by flat with depth 1.\n\t *\n\t * @param callback A function that accepts up to three arguments. The flatMap method calls the\n\t * callback function one time for each element in the array.\n\t * @param thisArg An object to which the this keyword can refer in the callback function. If\n\t * thisArg is omitted, undefined is used as the this value.\n\t */\n\t<U, T extends any, This = undefined>(\n\t\tarr: T[],\n\t\tcallback: (this: This, value: T, index: number, array: T[]) => U | ReadonlyArray<U>,\n\t\tthisArg?: This\n\t): U[];\n}\n\nexport let from: From;\n\n/**\n * Creates a new array from the function parameters.\n *\n * @param arguments Any number of arguments for the array\n * @return An array from the given arguments\n */\nexport let of: <T>(...items: T[]) => Array<T>;\n\n/* ES6 Array instance methods */\n\n/**\n * Copies data internally within an array or array-like object.\n *\n * @param target The target array-like object\n * @param offset The index to start copying values to; if negative, it counts backwards from length\n * @param start The first (inclusive) index to copy; if negative, it counts backwards from length\n * @param end The last (exclusive) index to copy; if negative, it counts backwards from length\n * @return The target\n */\nexport let copyWithin: <T>(target: ArrayLike<T>, offset: number, start: number, end?: number) => ArrayLike<T>;\n\n/**\n * Fills elements of an array-like object with the specified value.\n *\n * @param target The target to fill\n * @param value The value to fill each element of the target with\n * @param start The first index to fill\n * @param end The (exclusive) index at which to stop filling\n * @return The filled target\n */\nexport let fill: <T>(target: ArrayLike<T>, value: T, start?: number, end?: number) => ArrayLike<T>;\n\n/**\n * Finds and returns the first instance matching the callback or undefined if one is not found.\n *\n * @param target An array-like object\n * @param callback A function returning if the current value matches a criteria\n * @param thisArg The execution context for the find function\n * @return The first element matching the callback, or undefined if one does not exist\n */\nexport let find: <T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}) => T | undefined;\n\n/**\n * Performs a linear search and returns the first index whose value satisfies the passed callback,\n * or -1 if no values satisfy it.\n *\n * @param target An array-like object\n * @param callback A function returning true if the current value satisfies its criteria\n * @param thisArg The execution context for the find function\n * @return The first index whose value satisfies the passed callback, or -1 if no values satisfy it\n */\nexport let findIndex: <T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}) => number;\n\n/* ES7 Array instance methods */\n\n/**\n * Determines whether an array includes a given value\n *\n * @param target the target array-like object\n * @param searchElement the item to search for\n * @param fromIndex the starting index to search from\n * @return `true` if the array includes the element, otherwise `false`\n */\nexport let includes: <T>(target: ArrayLike<T>, searchElement: T, fromIndex?: number) => boolean;\n\n/**\n * Flattens arrays to the depth specified\n *\n * @param target An array-like object\n * @param depth The depth to flatten too, defaults to 1.\n */\nexport let flat: Flat;\n\nexport let flatMap: FlatMap;\n\n// Util functions for filled implementations\n\nlet toLength: any;\nlet toInteger: any;\nlet normalizeOffset: any;\n\nif (!has('es6-array') || !has('es6-array-fill') || !has('es7-array')) {\n\tconst MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n\t/**\n\t * Ensures a non-negative, non-infinite, safe integer.\n\t *\n\t * @param length The number to validate\n\t * @return A proper length\n\t */\n\ttoLength = function toLength(length: number): number {\n\t\tif (isNaN(length)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlength = Number(length);\n\t\tif (isFinite(length)) {\n\t\t\tlength = Math.floor(length);\n\t\t}\n\t\t// Ensure a non-negative, real, safe integer\n\t\treturn Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n\t};\n\n\t/**\n\t * From ES6 7.1.4 ToInteger()\n\t *\n\t * @param value A value to convert\n\t * @return An integer\n\t */\n\ttoInteger = function toInteger(value: any): number {\n\t\tvalue = Number(value);\n\t\tif (isNaN(value)) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (value === 0 || !isFinite(value)) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn (value > 0 ? 1 : -1) * Math.floor(Math.abs(value));\n\t};\n\n\t/**\n\t * Normalizes an offset against a given length, wrapping it if negative.\n\t *\n\t * @param value The original offset\n\t * @param length The total length to normalize against\n\t * @return If negative, provide a distance from the end (length); otherwise provide a distance from 0\n\t */\n\tnormalizeOffset = function normalizeOffset(value: number, length: number): number {\n\t\treturn value < 0 ? Math.max(length + value, 0) : Math.min(value, length);\n\t};\n}\n\nif (!has('es6-array')) {\n\tArray.from = function from(\n\t\tthis: ArrayConstructor,\n\t\tarrayLike: Iterable<any> | ArrayLike<any>,\n\t\tmapFunction?: MapCallback<any, any>,\n\t\tthisArg?: any\n\t): Array<any> {\n\t\tif (arrayLike == null) {\n\t\t\tthrow new TypeError('from: requires an array-like object');\n\t\t}\n\n\t\tif (mapFunction && thisArg) {\n\t\t\tmapFunction = mapFunction.bind(thisArg);\n\t\t}\n\n\t\t/* tslint:disable-next-line:variable-name */\n\t\tconst Constructor = this;\n\t\tconst length: number = toLength((arrayLike as any).length);\n\n\t\t// Support extension\n\t\tconst array: any[] =\n\t\t\ttypeof Constructor === 'function' ? <any[]>Object(new Constructor(length)) : new Array(length);\n\n\t\tif (!isArrayLike(arrayLike) && !isIterable(arrayLike)) {\n\t\t\treturn array;\n\t\t}\n\n\t\t// if this is an array and the normalized length is 0, just return an empty array. this prevents a problem\n\t\t// with the iteration on IE when using a NaN array length.\n\t\tif (isArrayLike(arrayLike)) {\n\t\t\tif (length === 0) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < arrayLike.length; i++) {\n\t\t\t\tarray[i] = mapFunction ? mapFunction(arrayLike[i], i) : arrayLike[i];\n\t\t\t}\n\t\t} else {\n\t\t\tlet i = 0;\n\t\t\tfor (const value of arrayLike) {\n\t\t\t\tarray[i] = mapFunction ? mapFunction(value, i) : value;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\tif ((arrayLike as any).length !== undefined) {\n\t\t\tarray.length = length;\n\t\t}\n\n\t\treturn array;\n\t};\n\n\tArray.of = function of<T>(...items: T[]): Array<T> {\n\t\treturn Array.prototype.slice.call(items);\n\t};\n\n\tArray.prototype.copyWithin = function copyWithin(offset: number, start: number, end?: number) {\n\t\tif (this == null) {\n\t\t\tthrow new TypeError('copyWithin: target must be an array-like object');\n\t\t}\n\n\t\tconst length = toLength(this.length);\n\t\toffset = normalizeOffset(toInteger(offset), length);\n\t\tstart = normalizeOffset(toInteger(start), length);\n\t\tend = normalizeOffset(end === undefined ? length : toInteger(end), length);\n\t\tlet count = Math.min(end! - start, length - offset);\n\n\t\tlet direction = 1;\n\t\tif (offset > start && offset < start + count) {\n\t\t\tdirection = -1;\n\t\t\tstart += count - 1;\n\t\t\toffset += count - 1;\n\t\t}\n\n\t\twhile (count > 0) {\n\t\t\tif (start in this) {\n\t\t\t\tthis[offset] = this[start];\n\t\t\t} else {\n\t\t\t\tdelete this[offset];\n\t\t\t}\n\n\t\t\toffset += direction;\n\t\t\tstart += direction;\n\t\t\tcount--;\n\t\t}\n\n\t\treturn this;\n\t};\n\n\ttype Predicate = (this: {} | void, value: any, index: number, obj: any[]) => boolean;\n\n\tArray.prototype.find = function find(callback: Predicate, thisArg?: {}) {\n\t\tconst index = this.findIndex(callback, thisArg);\n\t\treturn index !== -1 ? this[index] : undefined;\n\t};\n\n\tArray.prototype.findIndex = function findIndex(callback: Predicate, thisArg?: {}): number {\n\t\tconst length = toLength(this.length);\n\n\t\tif (!callback) {\n\t\t\tthrow new TypeError('find: second argument must be a function');\n\t\t}\n\n\t\tif (thisArg) {\n\t\t\tcallback = callback.bind(thisArg);\n\t\t}\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tif (callback(this[i], i, this)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t};\n}\n\nif (!has('es6-array-fill')) {\n\tArray.prototype.fill = function fill(value: any, start?: number, end?: number) {\n\t\tconst length = toLength(this.length);\n\t\tlet i = normalizeOffset(toInteger(start), length);\n\t\tend = normalizeOffset(end === undefined ? length : toInteger(end), length);\n\n\t\twhile (i < (end || 0)) {\n\t\t\tthis[i++] = value;\n\t\t}\n\n\t\treturn this;\n\t};\n}\n\nif (!has('es7-array')) {\n\tArray.prototype.includes = function includes(searchElement, fromIndex = 0) {\n\t\tlet len = toLength(this.length);\n\n\t\tfor (let i = fromIndex; i < len; ++i) {\n\t\t\tconst currentElement = this[i];\n\t\t\tif (\n\t\t\t\tsearchElement === currentElement ||\n\t\t\t\t(searchElement !== searchElement && currentElement !== currentElement)\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n}\n\nif (!has('es2019-array')) {\n\tArray.prototype.flat = function flat(depth: number = 1) {\n\t\treturn depth > 0\n\t\t\t? this.reduce((acc, val) => acc.concat(Array.isArray(val) ? val.flat(depth - 1) : val), [])\n\t\t\t: this.slice();\n\t};\n\n\tArray.prototype.flatMap = function flatMap(callback: any) {\n\t\treturn this.map(callback).flat();\n\t};\n}\n\nfrom = Array.from;\nof = Array.of;\ncopyWithin = wrapNative(Array.prototype.copyWithin);\nfill = wrapNative(Array.prototype.fill);\nfind = wrapNative(Array.prototype.find);\nflat = wrapNative(Array.prototype.flat) as any;\nflatMap = wrapNative(Array.prototype.flatMap) as any;\nfindIndex = wrapNative(Array.prototype.findIndex);\nincludes = wrapNative(Array.prototype.includes);\n\nexport default Array;\n","import Promise from '../shim/Promise';\n\n/**\n * Used through the toolkit as a consistent API to manage how callers can \"cleanup\"\n * when doing a function.\n */\nexport interface Handle {\n\t/**\n\t * Perform the destruction/cleanup logic associated with this Handle\n\t */\n\tdestroy(): void;\n}\n\n/**\n * No op function used to replace a Destroyable instance's `destroy` method, once the instance has been destroyed\n */\nfunction noop(): Promise<boolean> {\n\treturn Promise.resolve(false);\n}\n\n/**\n * No op function used to replace a Destroyable instance's `own` method, once the instance has been destroyed\n */\nfunction destroyed(): never {\n\tthrow new Error('Call made to destroyed method');\n}\n\nexport class Destroyable {\n\t/**\n\t * The instance's handles\n\t */\n\tprivate handles: Handle[];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis.handles = [];\n\t}\n\n\t/**\n\t * Register handles for the instance that will be destroyed when `this.destroy` is called\n\t *\n\t * @param {Handle} handle The handle to add for the instance\n\t * @returns {Handle} A wrapper Handle. When the wrapper Handle's `destroy` method is invoked, the original handle is\n\t *                   removed from the instance, and its `destroy` method is invoked.\n\t */\n\town(handle: Handle): Handle {\n\t\tconst { handles: _handles } = this;\n\t\t_handles.push(handle);\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\t_handles.splice(_handles.indexOf(handle));\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Destroys all handlers registered for the instance\n\t *\n\t * @returns {Promise<any} A Promise that resolves once all handles have been destroyed\n\t */\n\tdestroy(): Promise<any> {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.handles.forEach((handle) => {\n\t\t\t\thandle && handle.destroy && handle.destroy();\n\t\t\t});\n\t\t\tthis.destroy = noop;\n\t\t\tthis.own = destroyed;\n\t\t\tresolve(true);\n\t\t});\n\t}\n}\n\nexport default Destroyable;\n","import Map from '../shim/Map';\nimport { Destroyable, Handle } from './Destroyable';\n\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map<string, RegExp>();\n\nexport type EventType = string | symbol;\n\n/**\n * The base event object, which provides a `type` property\n */\nexport interface EventObject<T = EventType> {\n\t/**\n\t * The type of the event\n\t */\n\treadonly type: T;\n}\n\n/**\n * Determines if the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString: string | symbol, targetString: string | symbol): boolean {\n\tif (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n\t\tlet regex: RegExp;\n\t\tif (regexMap.has(globString)) {\n\t\t\tregex = regexMap.get(globString)!;\n\t\t} else {\n\t\t\tregex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n\t\t\tregexMap.set(globString, regex);\n\t\t}\n\t\treturn regex.test(targetString);\n\t} else {\n\t\treturn globString === targetString;\n\t}\n}\n\nexport type EventedCallback<T = EventType, E extends EventObject<T> = EventObject<T>> = {\n\t/**\n\t * A callback that takes an `event` argument\n\t *\n\t * @param event The event object\n\t */\n\n\t(event: E): boolean | void;\n};\n\nexport interface CustomEventTypes<T extends EventObject<any> = EventObject<any>> {\n\t[index: string]: T;\n}\n\n/**\n * A type which is either a targeted event listener or an array of listeners\n * @template T The type of target for the events\n * @template E The event type for the events\n */\nexport type EventedCallbackOrArray<T = EventType, E extends EventObject<T> = EventObject<T>> =\n\t| EventedCallback<T, E>\n\t| EventedCallback<T, E>[];\n\n/**\n * Event Class\n */\nexport class Evented<\n\tM extends CustomEventTypes = {},\n\tT = EventType,\n\tO extends EventObject<T> = EventObject<T>\n> extends Destroyable {\n\t// The following member is purely so TypeScript remembers the type of `M` when extending so\n\t// that the utilities in `on.ts` will work https://github.com/Microsoft/TypeScript/issues/20348\n\t// tslint:disable-next-line\n\tprotected __typeMap__?: M;\n\t/**\n\t * map of listeners keyed by event type\n\t */\n\tprotected listenersMap: Map<T | keyof M, EventedCallback<T, O>[]> = new Map();\n\n\t/**\n\t * Emits the event object for the specified type\n\t *\n\t * @param event the event to emit\n\t */\n\temit<K extends keyof M>(event: M[K]): void;\n\temit(event: O): void;\n\temit(event: any): void {\n\t\tthis.listenersMap.forEach((methods, type) => {\n\t\t\tif (isGlobMatch(type as any, event.type)) {\n\t\t\t\t[...methods].forEach((method) => {\n\t\t\t\t\tmethod.call(this, event);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Catch all handler for various call signatures. The signatures are defined in\n\t * `BaseEventedEvents`.  You can add your own event type -> handler types by extending\n\t * `BaseEventedEvents`.  See example for details.\n\t *\n\t * @param args\n\t *\n\t * @example\n\t *\n\t * interface WidgetBaseEvents extends BaseEventedEvents {\n\t *     (type: 'properties:changed', handler: PropertiesChangedHandler): Handle;\n\t * }\n\t * class WidgetBase extends Evented {\n\t *    on: WidgetBaseEvents;\n\t * }\n\t *\n\t * @return {any}\n\t */\n\ton<K extends keyof M>(type: K, listener: EventedCallbackOrArray<K, M[K]>): Handle;\n\ton(type: T, listener: EventedCallbackOrArray<T, O>): Handle;\n\ton(type: any, listener: EventedCallbackOrArray<any, any>): Handle {\n\t\tif (Array.isArray(listener)) {\n\t\t\tconst handles = listener.map((listener) => this._addListener(type, listener));\n\t\t\treturn {\n\t\t\t\tdestroy() {\n\t\t\t\t\thandles.forEach((handle) => handle.destroy());\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn this._addListener(type, listener);\n\t}\n\n\tprivate _addListener(type: T | keyof M, listener: EventedCallback<T, O>) {\n\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\tlisteners.push(listener);\n\t\tthis.listenersMap.set(type, listeners);\n\t\treturn {\n\t\t\tdestroy: () => {\n\t\t\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\t\t\tlisteners.splice(listeners.indexOf(listener), 1);\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport default Evented;\n","import Promise from '../shim/Promise';\nimport Map from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport {\n\tConstructor,\n\tInjectorFactory,\n\tInjectorItem,\n\tRegistryLabel,\n\tWidgetBaseConstructor,\n\tWidgetBaseInterface,\n\tESMDefaultWidgetBase,\n\tWidgetBaseConstructorFunction,\n\tESMDefaultWidgetBaseFunction,\n\tCallback,\n\tWNodeFactory,\n\tRenderResult,\n\tWidgetBaseTypes,\n\tDefaultChildrenWNodeFactory,\n\tOptionalWNodeFactory\n} from './interfaces';\n\nexport type RegistryItem =\n\t| WidgetBaseConstructor\n\t| WNodeFactory<any>\n\t| DefaultChildrenWNodeFactory<any>\n\t| OptionalWNodeFactory<any>\n\t| Promise<WidgetBaseConstructor | WNodeFactory<any>>\n\t| WidgetBaseConstructorFunction\n\t| ESMDefaultWidgetBaseFunction;\n\n/**\n * Widget base type\n */\nexport const WIDGET_BASE_TYPE = '__widget_base_type';\n\nexport interface RegistryEventObject extends EventObject<RegistryLabel> {\n\taction: string;\n\titem:\n\t\t| WNodeFactory<any>\n\t\t| DefaultChildrenWNodeFactory<any>\n\t\t| OptionalWNodeFactory<any>\n\t\t| WidgetBaseConstructor\n\t\t| InjectorItem;\n}\n/**\n * Widget Registry Interface\n */\nexport interface RegistryInterface {\n\t/**\n\t * Define a WidgetRegistryItem against a label\n\t *\n\t * @param label The label of the widget to register\n\t * @param registryItem The registry item to define\n\t */\n\tdefine(label: RegistryLabel, registryItem: RegistryItem): void;\n\n\t/**\n\t * Return a RegistryItem for the given label, null if an entry doesn't exist\n\t *\n\t * @param widgetLabel The label of the widget to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tget(label: RegistryLabel): WNodeFactory<any> | Callback<any, any, any, RenderResult> | Constructor<any> | null;\n\tget<T extends WNodeFactory<any>>(label: RegistryLabel): T | null;\n\tget<T extends Callback<any, any, any, RenderResult>>(label: RegistryLabel): T | null;\n\tget<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\n\t/**\n\t * Returns a boolean if an entry for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a widget registry item exists\n\t */\n\thas(label: RegistryLabel): boolean;\n\n\t/**\n\t * Define an Injector against a label\n\t *\n\t * @param label The label of the injector to register\n\t * @param registryItem The injector factory\n\t */\n\tdefineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void;\n\n\t/**\n\t * Return an Injector registry item for the given label, null if an entry doesn't exist\n\t *\n\t * @param label The label of the injector to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tgetInjector<T>(label: RegistryLabel): InjectorItem<T> | null;\n\n\t/**\n\t * Returns a boolean if an injector for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a injector registry item exists\n\t */\n\thasInjector(label: RegistryLabel): boolean;\n}\n\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor<T extends WidgetBaseInterface = any>(item: any): item is Constructor<T> {\n\treturn Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\n\nexport function isWidgetFunction(item: any): item is Callback<any, any, any, RenderResult> {\n\treturn Boolean(item && item.isWidget);\n}\n\nexport function isWNodeFactory<W extends WidgetBaseTypes>(node: any): node is WNodeFactory<W> {\n\tif (typeof node === 'function' && node.isFactory) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport function isWidget<T extends WidgetBaseInterface = any>(\n\titem: any\n): item is Constructor<T> | Callback<any, any, any, RenderResult> {\n\treturn isWidgetBaseConstructor(item) || isWidgetFunction(item);\n}\n\nexport function isWidgetConstructorDefaultExport<T extends WidgetBaseTypes>(\n\titem: any\n): item is ESMDefaultWidgetBase<T> {\n\treturn Boolean(\n\t\titem &&\n\t\t\titem.hasOwnProperty('__esModule') &&\n\t\t\titem.hasOwnProperty('default') &&\n\t\t\t(isWidget(item.default) || isWNodeFactory(item.default))\n\t);\n}\n\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented<{}, RegistryLabel, RegistryEventObject> implements RegistryInterface {\n\t/**\n\t * internal map of labels and RegistryItem\n\t */\n\tprivate _widgetRegistry: Map<RegistryLabel, RegistryItem> | undefined;\n\n\tprivate _injectorRegistry: Map<RegistryLabel, InjectorItem> | undefined;\n\n\t/**\n\t * Emit loaded event for registry label\n\t */\n\tprivate emitLoadedEvent(\n\t\twidgetLabel: RegistryLabel,\n\t\titem:\n\t\t\t| DefaultChildrenWNodeFactory<any>\n\t\t\t| OptionalWNodeFactory<any>\n\t\t\t| WNodeFactory<any>\n\t\t\t| WidgetBaseConstructor\n\t\t\t| InjectorItem\n\t): void {\n\t\tthis.emit({\n\t\t\ttype: widgetLabel,\n\t\t\taction: 'loaded',\n\t\t\titem\n\t\t});\n\t}\n\n\tpublic define(label: RegistryLabel, item: RegistryItem): void {\n\t\tif (this._widgetRegistry === undefined) {\n\t\t\tthis._widgetRegistry = new Map();\n\t\t}\n\n\t\tif (this._widgetRegistry.has(label)) {\n\t\t\tthrow new Error(`widget has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tthis._widgetRegistry.set(label, item);\n\n\t\tif (item instanceof Promise) {\n\t\t\titem.then(\n\t\t\t\t(widgetCtor) => {\n\t\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\t\treturn widgetCtor;\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (isWidgetBaseConstructor(item)) {\n\t\t\tthis.emitLoadedEvent(label, item);\n\t\t}\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void {\n\t\tif (this._injectorRegistry === undefined) {\n\t\t\tthis._injectorRegistry = new Map();\n\t\t}\n\n\t\tif (this._injectorRegistry.has(label)) {\n\t\t\tthrow new Error(`injector has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tconst invalidator = new Evented();\n\n\t\tconst injectorItem: InjectorItem = {\n\t\t\tinjector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n\t\t\tinvalidator\n\t\t};\n\n\t\tthis._injectorRegistry.set(label, injectorItem);\n\t\tthis.emitLoadedEvent(label, injectorItem);\n\t}\n\n\tpublic get(\n\t\tlabel: RegistryLabel\n\t): WNodeFactory<any> | Callback<any, any, any, RenderResult> | Constructor<any> | null;\n\tpublic get<T extends WNodeFactory<any>>(label: RegistryLabel): T | null;\n\tpublic get<T extends Callback<any, any, any, RenderResult>>(label: RegistryLabel): T | null;\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel\n\t): WNodeFactory<T> | Callback<any, any, any, RenderResult> | Constructor<T> | null {\n\t\tif (!this._widgetRegistry || !this.has(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst item = this._widgetRegistry.get(label);\n\n\t\tif (isWidget<T>(item) || isWNodeFactory(item)) {\n\t\t\treturn item as any;\n\t\t}\n\n\t\tif (item instanceof Promise) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst promise = (<WidgetBaseConstructorFunction>item)();\n\t\tthis._widgetRegistry.set(label, promise);\n\n\t\tpromise.then(\n\t\t\t(widgetCtor: any) => {\n\t\t\t\tif (isWidgetConstructorDefaultExport<T>(widgetCtor)) {\n\t\t\t\t\twidgetCtor = widgetCtor.default;\n\t\t\t\t}\n\n\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\treturn widgetCtor;\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t);\n\n\t\treturn null;\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel): InjectorItem<T> | null {\n\t\tif (!this._injectorRegistry || !this.hasInjector(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._injectorRegistry.get(label)!;\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n\t}\n}\n\nexport default Registry;\n","import { PropertyChangeRecord } from './interfaces';\nimport { WIDGET_BASE_TYPE } from './Registry';\n\nfunction isObjectOrArray(value: any): boolean {\n\treturn Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\n\nexport function always(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: true,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function ignore(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: false,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function reference(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: previousProperty !== newProperty,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function shallow(previousProperty: any, newProperty: any, depth = 0): PropertyChangeRecord {\n\tlet changed = false;\n\n\tconst validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n\tconst validNewProperty = newProperty && isObjectOrArray(newProperty);\n\n\tif (!validOldProperty || !validNewProperty) {\n\t\treturn {\n\t\t\tchanged: true,\n\t\t\tvalue: newProperty\n\t\t};\n\t}\n\n\tconst previousKeys = Object.keys(previousProperty);\n\tconst newKeys = Object.keys(newProperty);\n\n\tif (previousKeys.length !== newKeys.length) {\n\t\tchanged = true;\n\t} else {\n\t\tchanged = newKeys.some((key) => {\n\t\t\tif (depth > 0) {\n\t\t\t\treturn auto(newProperty[key], previousProperty[key], depth - 1).changed;\n\t\t\t}\n\t\t\treturn newProperty[key] !== previousProperty[key];\n\t\t});\n\t}\n\treturn {\n\t\tchanged,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function auto(previousProperty: any, newProperty: any, depth = 0): PropertyChangeRecord {\n\tlet result;\n\tif (typeof newProperty === 'function') {\n\t\tif (newProperty._type === WIDGET_BASE_TYPE) {\n\t\t\tresult = reference(previousProperty, newProperty);\n\t\t} else {\n\t\t\tresult = ignore(previousProperty, newProperty);\n\t\t}\n\t} else if (isObjectOrArray(newProperty)) {\n\t\tresult = shallow(previousProperty, newProperty, depth);\n\t} else {\n\t\tresult = reference(previousProperty, newProperty);\n\t}\n\treturn result;\n}\n","import { Map } from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport { Constructor, InjectorFactory, InjectorItem, RegistryLabel, WidgetBaseInterface } from './interfaces';\nimport { Registry, RegistryEventObject, RegistryItem } from './Registry';\n\nexport type RegistryHandlerEventMap = {\n\tinvalidate: EventObject<'invalidate'>;\n};\n\nexport class RegistryHandler extends Evented<RegistryHandlerEventMap> {\n\tprivate _registry = new Registry();\n\tprivate _registryWidgetLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprivate _registryInjectorLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprotected baseRegistry!: Registry;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.own(this._registry);\n\t\tconst destroy = () => {\n\t\t\tif (this.baseRegistry) {\n\t\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis.baseRegistry = undefined as any;\n\t\t\t}\n\t\t};\n\t\tthis.own({ destroy });\n\t}\n\n\tpublic set base(baseRegistry: Registry) {\n\t\tif (this.baseRegistry) {\n\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t}\n\t\tthis.baseRegistry = baseRegistry;\n\t}\n\n\tpublic get base(): Registry {\n\t\treturn this.baseRegistry;\n\t}\n\n\tpublic define(label: RegistryLabel, widget: RegistryItem): void {\n\t\tthis._registry.define(label, widget);\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injector: InjectorFactory): void {\n\t\tthis._registry.defineInjector(label, injector);\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n\t}\n\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean = false\n\t): Constructor<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel, globalPrecedence: boolean = false): InjectorItem<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n\t}\n\n\tprivate _get(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean,\n\t\tgetFunctionName: 'getInjector' | 'get',\n\t\tlabelMap: Map<Registry, RegistryLabel[]>\n\t): any {\n\t\tconst registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n\t\tfor (let i = 0; i < registries.length; i++) {\n\t\t\tconst registry: any = registries[i];\n\t\t\tif (!registry) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst item = registry[getFunctionName](label);\n\t\t\tconst registeredLabels = labelMap.get(registry) || [];\n\t\t\tif (item) {\n\t\t\t\treturn item;\n\t\t\t} else if (registeredLabels.indexOf(label) === -1) {\n\t\t\t\tconst handle = registry.on(label, (event: RegistryEventObject) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.action === 'loaded' &&\n\t\t\t\t\t\t(this as any)[getFunctionName](label, globalPrecedence) === event.item\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.emit({ type: 'invalidate' });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.own(handle);\n\t\t\t\tlabelMap.set(registry, [...registeredLabels, label]);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default RegistryHandler;\n","import global from '../shim/global';\nimport has from '../core/has';\nimport WeakMap from '../shim/WeakMap';\nimport Set from '../shim/Set';\nimport Map from '../shim/Map';\nimport { flat } from '../shim/array';\nimport {\n\tWNode,\n\tVNode,\n\tDNode,\n\tVNodeProperties,\n\tTransitionStrategy,\n\tSupportedClassName,\n\tDomVNode,\n\tLazyDefine,\n\tConstructor,\n\tRenderResult,\n\tWidgetBaseInterface,\n\tCallback,\n\tMiddlewareMap,\n\tWNodeFactory,\n\tOptionalWNodeFactory,\n\tUnionToIntersection,\n\tWidgetProperties,\n\tMiddlewareResultFactory,\n\tWidgetBaseTypes,\n\tRegistryLabel,\n\tDeferredVirtualProperties,\n\tDomOptions,\n\tDefaultChildrenWNodeFactory\n} from './interfaces';\nimport { Registry, isWidget, isWidgetBaseConstructor, isWidgetFunction, isWNodeFactory } from './Registry';\nimport { auto } from './diff';\nimport RegistryHandler from './RegistryHandler';\nimport { NodeHandler } from './NodeHandler';\n\nexport namespace tsx.JSX {\n\texport type Element = WNode;\n\texport interface ElementAttributesProperty {\n\t\t__properties__: {};\n\t}\n\texport interface IntrinsicElements {\n\t\t[key: string]: VNodeProperties;\n\t}\n\texport interface ElementChildrenAttribute {\n\t\t__children__: {};\n\t}\n}\n\nexport interface BaseNodeWrapper {\n\tid: string;\n\towningId: string;\n\tnode: WNode<any> | VNode;\n\tdomNode?: Node;\n\tdepth: number;\n\torder: number;\n\trequiresInsertBefore?: boolean;\n\thasPreviousSiblings?: boolean;\n\thasParentWNode?: boolean;\n\tnamespace?: string;\n\thasAnimations?: boolean;\n\tparentId: string;\n\tchildDomWrapperId?: string;\n}\n\nexport interface WNodeWrapper extends BaseNodeWrapper {\n\tnode: WNode<any>;\n\tkeys?: string[];\n\tinstance?: any;\n\tmergeNodes?: Node[];\n\tnodeHandlerCalled?: boolean;\n\tregistryItem?: Callback<any, any, any, RenderResult> | Constructor<any> | null;\n\tproperties: any;\n}\n\nexport interface WidgetMeta {\n\twidgetName: string;\n\tmountNode: HTMLElement;\n\tdirty: boolean;\n\tinvalidator: () => void;\n\tmiddleware?: any;\n\tmiddlewareIds: string[];\n\tregistryHandler?: RegistryHandler;\n\tregistry: Registry;\n\tproperties: any;\n\toriginalProperties: any;\n\tchildren?: DNode[];\n\trendering: boolean;\n\tnodeMap?: Map<string | number, HTMLElement>;\n\tdestroyMap?: Map<string, () => void>;\n\tdeferRefs: number;\n\tcustomDiffProperties?: Set<string>;\n\tcustomDiffMap?: Map<string, Map<string, (current: any, next: any) => any>>;\n\tpropertiesCalled: boolean;\n}\n\nexport interface WidgetData {\n\tonDetach: () => void;\n\tonAttach: () => void;\n\tdirty: boolean;\n\tnodeHandler: NodeHandler;\n\tinvalidate?: Function;\n\trendering: boolean;\n\tinputProperties: any;\n\tregistry: RegistryHandler;\n}\n\nexport interface VNodeWrapper extends BaseNodeWrapper {\n\tnode: VNode | DomVNode;\n\tmerged?: boolean;\n\tinserted?: boolean;\n\tdeferredProperties?: VNodeProperties;\n}\n\nexport type DNodeWrapper = VNodeWrapper | WNodeWrapper;\n\nexport interface MountOptions {\n\tsync: boolean;\n\tmerge: boolean;\n\ttransition?: TransitionStrategy;\n\tdomNode: HTMLElement | null;\n\tregistry: Registry;\n}\n\nexport interface Renderer {\n\tinvalidate(): void;\n\tmount(mountOptions?: Partial<MountOptions>): void;\n\tunmount(): void;\n}\n\ninterface ProcessItem {\n\tcurrent?: (WNodeWrapper | VNodeWrapper)[];\n\tnext?: (WNodeWrapper | VNodeWrapper)[];\n\tmeta: ProcessMeta;\n}\n\ninterface ProcessResult {\n\titem?: ProcessItem;\n\twidget?: AttachApplication | DetachApplication;\n\tdom?: ApplicationInstruction;\n}\n\ninterface ProcessMeta {\n\tmergeNodes?: Node[];\n\toldIndex?: number;\n\tnewIndex?: number;\n}\n\ninterface InvalidationQueueItem {\n\tid: string;\n\tdepth: number;\n\torder: number;\n}\n\ninterface Instruction {\n\tcurrent: undefined | DNodeWrapper;\n\tnext: undefined | DNodeWrapper;\n}\n\ninterface CreateWidgetInstruction {\n\tnext: WNodeWrapper;\n}\n\ninterface UpdateWidgetInstruction {\n\tcurrent: WNodeWrapper;\n\tnext: WNodeWrapper;\n}\n\ninterface RemoveWidgetInstruction {\n\tcurrent: WNodeWrapper;\n}\n\ninterface CreateDomInstruction {\n\tnext: VNodeWrapper;\n}\n\ninterface UpdateDomInstruction {\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface RemoveDomInstruction {\n\tcurrent: VNodeWrapper;\n}\n\ninterface AttachApplication {\n\ttype: 'attach';\n\tid: string;\n\tinstance?: WidgetBaseInterface;\n\tattached?: boolean;\n}\n\ninterface DetachApplication {\n\ttype: 'detach';\n\tcurrent: WNodeWrapper;\n\tinstance?: WidgetBaseInterface;\n}\n\ninterface CreateDomApplication {\n\ttype: 'create';\n\tcurrent?: VNodeWrapper;\n\tnext: VNodeWrapper;\n\tparentDomNode: Node;\n}\n\ninterface DeleteDomApplication {\n\ttype: 'delete';\n\tcurrent: VNodeWrapper;\n}\n\ninterface UpdateDomApplication {\n\ttype: 'update';\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface PreviousProperties {\n\tproperties: any;\n\tattributes?: any;\n\tevents?: any;\n}\n\ntype ApplicationInstruction =\n\t| CreateDomApplication\n\t| UpdateDomApplication\n\t| DeleteDomApplication\n\t| Required<AttachApplication>\n\t| DetachApplication;\n\nconst EMPTY_ARRAY: DNodeWrapper[] = [];\nconst nodeOperations = ['focus', 'blur', 'scrollIntoView', 'click'];\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\nconst WNODE = '__WNODE_TYPE';\nconst VNODE = '__VNODE_TYPE';\nconst DOMVNODE = '__DOMVNODE_TYPE';\n\n// @ts-ignore\nconst scope = typeof __DOJO_SCOPE === 'string' ? __DOJO_SCOPE : 'dojo_scope';\n\nif (!global[scope]) {\n\tglobal[scope] = {};\n}\n\nexport function setRendering(value: boolean) {\n\tglobal[scope].rendering = value;\n}\n\nexport function incrementBlockCount() {\n\tconst blocksPending = global[scope].blocksPending || 0;\n\tglobal[scope].blocksPending = blocksPending + 1;\n}\n\nexport function decrementBlockCount() {\n\tconst blocksPending = global[scope].blocksPending || 0;\n\tglobal[scope].blocksPending = blocksPending - 1;\n}\n\nexport function isTextNode(item: any): item is Text {\n\treturn item && item.nodeType === 3;\n}\n\nfunction isLazyDefine(item: any): item is LazyDefine<any> {\n\treturn Boolean(item && item.label);\n}\n\nfunction isWNodeWrapper(child: DNodeWrapper): child is WNodeWrapper {\n\treturn child && isWNode(child.node);\n}\n\nfunction isVNodeWrapper(child?: DNodeWrapper | null): child is VNodeWrapper {\n\treturn !!child && isVNode(child.node);\n}\n\nfunction isVirtualWrapper(child?: DNodeWrapper | null): boolean {\n\treturn isVNodeWrapper(child) && child.node.tag === 'virtual';\n}\n\nfunction isBodyWrapper(wrapper?: DNodeWrapper): boolean {\n\treturn isVNodeWrapper(wrapper) && wrapper.node.tag === 'body';\n}\n\nfunction isHeadWrapper(wrapper?: DNodeWrapper): boolean {\n\treturn isVNodeWrapper(wrapper) && wrapper.node.tag === 'head';\n}\n\nfunction isSpecialWrapper(wrapper?: DNodeWrapper): boolean {\n\treturn isHeadWrapper(wrapper) || isBodyWrapper(wrapper) || isVirtualWrapper(wrapper);\n}\n\nfunction isAttachApplication(value: any): value is AttachApplication | DetachApplication {\n\treturn !!value.type;\n}\n\nexport function isWNode<W extends WidgetBaseTypes = any>(child: any): child is WNode<W> {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === WNODE);\n}\n\nexport function isVNode(child: DNode): child is VNode {\n\treturn Boolean(\n\t\tchild && child !== true && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE)\n\t);\n}\n\nexport function isDomVNode(child: DNode): child is DomVNode {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === DOMVNODE);\n}\n\nexport function isElementNode(value: any): value is Element {\n\treturn !!value.tagName;\n}\n\nfunction toTextVNode(data: any): VNode {\n\treturn {\n\t\ttag: '',\n\t\tproperties: {},\n\t\tchildren: undefined,\n\t\ttext: `${data}`,\n\t\ttype: VNODE\n\t};\n}\n\nfunction updateAttributes(\n\tdomNode: Element,\n\tpreviousAttributes: { [index: string]: string | undefined },\n\tattributes: { [index: string]: string | undefined },\n\tnamespace?: string\n) {\n\tconst attrNames = Object.keys(attributes);\n\tconst attrCount = attrNames.length;\n\tfor (let i = 0; i < attrCount; i++) {\n\t\tconst attrName = attrNames[i];\n\t\tconst attrValue = attributes[attrName];\n\t\tconst previousAttrValue = previousAttributes[attrName];\n\t\tif (attrValue !== previousAttrValue) {\n\t\t\tupdateAttribute(domNode, attrName, attrValue, namespace);\n\t\t}\n\t}\n}\n\n/**\n * Wrapper function for calls to create a widget.\n */\nexport function w<W extends WidgetBaseTypes>(\n\tnode: WNode<W>,\n\tproperties: Partial<W['properties']>,\n\tchildren?: W['properties'] extends { __children__: any } ? W['properties']['__children__'] : W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseTypes>(\n\twidgetConstructor: Constructor<W> | RegistryLabel | LazyDefine<W>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WNodeFactory<any>>(\n\twidgetConstructor: W,\n\tproperties: W['properties'],\n\tchildren: W['children'] extends any[] ? W['children'] : [W['children']]\n): WNode<W>;\nexport function w<W extends DefaultChildrenWNodeFactory<any>>(\n\twidgetConstructor: W,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends OptionalWNodeFactory<any>>(\n\twidgetConstructor: W,\n\tproperties: W['properties'],\n\tchildren?: W['children'] extends any[] ? W['children'] : [W['children']]\n): WNode<W>;\nexport function w<W extends WidgetBaseTypes>(\n\twidgetConstructorOrNode:\n\t\t| Constructor<W>\n\t\t| RegistryLabel\n\t\t| WNodeFactory<W>\n\t\t| WNode<W>\n\t\t| LazyDefine<W>\n\t\t| Callback<any, any, any, RenderResult>,\n\tproperties: W['properties'],\n\tchildren?: any\n): WNode<W> {\n\tif ((properties as any).__children__) {\n\t\tdelete (properties as any).__children__;\n\t}\n\n\tif (isWNodeFactory<W>(widgetConstructorOrNode)) {\n\t\treturn widgetConstructorOrNode(properties, children);\n\t}\n\n\tif (isWNode<W>(widgetConstructorOrNode)) {\n\t\tproperties = { ...(widgetConstructorOrNode.properties as any), ...(properties as any) };\n\t\tchildren = children ? children : widgetConstructorOrNode.children;\n\t\twidgetConstructorOrNode = widgetConstructorOrNode.widgetConstructor;\n\t}\n\n\treturn {\n\t\tchildren: children || [],\n\t\twidgetConstructor: widgetConstructorOrNode,\n\t\tproperties,\n\t\ttype: WNODE\n\t};\n}\n\n/**\n * Wrapper function for calls to create VNodes.\n */\nexport function v(node: VNode, properties: VNodeProperties, children: undefined | DNode[]): VNode;\nexport function v(node: VNode, properties: VNodeProperties): VNode;\nexport function v(tag: string, children: undefined | DNode[]): VNode;\nexport function v<K extends keyof HTMLElementTagNameMap>(\n\ttag: K,\n\tproperties: DeferredVirtualProperties | VNodeProperties<HTMLElementTagNameMap[K]>,\n\tchildren?: DNode[]\n): VNode;\nexport function v(tag: string, properties: DeferredVirtualProperties | VNodeProperties, children?: DNode[]): VNode;\nexport function v(tag: string): VNode;\nexport function v(\n\ttag: string | VNode,\n\tpropertiesOrChildren: VNodeProperties | DeferredVirtualProperties | DNode[] = {},\n\tchildren: undefined | DNode[] = undefined\n): VNode {\n\tlet properties: VNodeProperties | DeferredVirtualProperties = propertiesOrChildren;\n\tlet deferredPropertiesCallback;\n\n\tif (typeof (tag as any).tag === 'function') {\n\t\treturn (tag as any).tag(properties, children);\n\t}\n\n\tif (Array.isArray(propertiesOrChildren)) {\n\t\tchildren = propertiesOrChildren;\n\t\tproperties = {};\n\t}\n\n\tif (typeof properties === 'function') {\n\t\tdeferredPropertiesCallback = properties;\n\t\tproperties = {};\n\t}\n\n\tif (isVNode(tag)) {\n\t\tlet { classes = [], styles = {}, ...newProperties } = properties;\n\t\tlet { classes: nodeClasses = [], styles: nodeStyles = {}, ...nodeProperties } = tag.properties;\n\t\tnodeClasses = Array.isArray(nodeClasses) ? nodeClasses : [nodeClasses];\n\t\tclasses = Array.isArray(classes) ? classes : [classes];\n\t\tstyles = { ...nodeStyles, ...styles };\n\t\tproperties = { ...nodeProperties, ...newProperties, classes: [...nodeClasses, ...classes], styles };\n\t\tchildren = children ? children : tag.children;\n\t\ttag = tag.tag;\n\t}\n\n\treturn {\n\t\ttag,\n\t\tdeferredPropertiesCallback,\n\t\tchildren,\n\t\tproperties,\n\t\ttype: VNODE\n\t};\n}\n\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom(\n\t{ node, attrs = {}, props = {}, on = {}, diffType = 'none', onAttach }: DomOptions,\n\tchildren?: DNode[]\n): DomVNode {\n\treturn {\n\t\ttag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n\t\tproperties: props,\n\t\tattributes: attrs,\n\t\tevents: on,\n\t\tchildren,\n\t\ttype: DOMVNODE,\n\t\tdomNode: node,\n\t\ttext: isElementNode(node) ? undefined : node.data,\n\t\tdiffType,\n\t\tonAttach\n\t};\n}\n\nexport const REGISTRY_ITEM = '__registry_item';\n\nexport class FromRegistry<P> {\n\tstatic type = REGISTRY_ITEM;\n\t/* tslint:disable-next-line:variable-name */\n\t__properties__: P = {} as P;\n\tname: string | undefined;\n}\n\nexport function fromRegistry<P>(tag: string): Constructor<FromRegistry<P>> {\n\treturn class extends FromRegistry<P> {\n\t\tproperties: P = {} as P;\n\t\tstatic type = REGISTRY_ITEM;\n\t\tname = tag;\n\t};\n}\n\nexport function tsx(tag: any, properties = {}, ...children: any[]): DNode {\n\tchildren = flat(children, Infinity);\n\tproperties = properties === null ? {} : properties;\n\tif (typeof tag === 'string') {\n\t\treturn v(tag, properties, children);\n\t} else if (tag.type === 'registry' && (properties as any).__autoRegistryItem) {\n\t\tconst name = (properties as any).__autoRegistryItem;\n\t\tdelete (properties as any).__autoRegistryItem;\n\t\treturn w(name, properties, children);\n\t} else if (tag.type === REGISTRY_ITEM) {\n\t\tconst registryItem = new tag();\n\t\treturn w(registryItem.name, properties, children);\n\t} else {\n\t\treturn w(tag, properties, children);\n\t}\n}\n\nexport function propertiesDiff(current: any, next: any, invalidator: () => void, ignoreProperties: string[]) {\n\tconst propertyNames = [...Object.keys(current), ...Object.keys(next)];\n\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\tif (ignoreProperties.indexOf(propertyNames[i]) > -1) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst result = auto(current[propertyNames[i]], next[propertyNames[i]]);\n\t\tif (result.changed) {\n\t\t\tinvalidator();\n\t\t\tbreak;\n\t\t}\n\t\tignoreProperties.push(propertyNames[i]);\n\t}\n}\n\nfunction buildPreviousProperties(domNode: any, current: VNodeWrapper) {\n\tconst {\n\t\tnode: { diffType, properties, attributes }\n\t} = current;\n\tif (!diffType || diffType === 'vdom') {\n\t\treturn {\n\t\t\tproperties: current.deferredProperties\n\t\t\t\t? { ...current.deferredProperties, ...current.node.properties }\n\t\t\t\t: current.node.properties,\n\t\t\tattributes: current.node.attributes,\n\t\t\tevents: current.node.events\n\t\t};\n\t} else if (diffType === 'none') {\n\t\treturn {\n\t\t\tproperties: {},\n\t\t\tattributes: current.node.attributes ? {} : undefined,\n\t\t\tevents: current.node.events\n\t\t};\n\t}\n\tlet newProperties: any = {\n\t\tproperties: {}\n\t};\n\tif (attributes) {\n\t\tnewProperties.attributes = {};\n\t\tnewProperties.events = current.node.events;\n\t\tObject.keys(properties).forEach((propName) => {\n\t\t\tnewProperties.properties[propName] = domNode[propName];\n\t\t});\n\t\tObject.keys(attributes).forEach((attrName) => {\n\t\t\tnewProperties.attributes[attrName] = domNode.getAttribute(attrName);\n\t\t});\n\t\treturn newProperties;\n\t}\n\tnewProperties.properties = Object.keys(properties).reduce(\n\t\t(props, property) => {\n\t\t\tprops[property] = domNode.getAttribute(property) || domNode[property];\n\t\t\treturn props;\n\t\t},\n\t\t{} as any\n\t);\n\treturn newProperties;\n}\n\nfunction checkDistinguishable(wrappers: DNodeWrapper[], index: number, parentWNodeWrapper?: WNodeWrapper) {\n\tconst wrapperToCheck = wrappers[index];\n\tif (isVNodeWrapper(wrapperToCheck) && !wrapperToCheck.node.tag) {\n\t\treturn;\n\t}\n\tconst { key } = wrapperToCheck.node.properties;\n\tlet parentName = 'unknown';\n\tif (parentWNodeWrapper) {\n\t\tconst {\n\t\t\tnode: { widgetConstructor }\n\t\t} = parentWNodeWrapper;\n\t\tparentName = (widgetConstructor as any).name || 'unknown';\n\t}\n\n\tif (key === undefined || key === null) {\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tif (i !== index) {\n\t\t\t\tconst wrapper = wrappers[i];\n\t\t\t\tif (same(wrapper, wrapperToCheck)) {\n\t\t\t\t\tlet nodeIdentifier: string;\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\tnodeIdentifier = (wrapper.node.widgetConstructor as any).name || 'unknown';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnodeIdentifier = wrapper.node.tag;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`A widget (${parentName}) has had a child added or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction same(dnode1: DNodeWrapper, dnode2: DNodeWrapper): boolean {\n\tif (isVNodeWrapper(dnode1) && isVNodeWrapper(dnode2)) {\n\t\tif (isDomVNode(dnode1.node) && isDomVNode(dnode2.node)) {\n\t\t\tif (dnode1.node.domNode !== dnode2.node.domNode) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (dnode1.node.tag !== dnode2.node.tag) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t} else if (isWNodeWrapper(dnode1) && isWNodeWrapper(dnode2)) {\n\t\tconst widgetConstructor1 = dnode1.registryItem || dnode1.node.widgetConstructor;\n\t\tconst widgetConstructor2 = dnode2.registryItem || dnode2.node.widgetConstructor;\n\t\tconst {\n\t\t\tnode: { properties: props1 }\n\t\t} = dnode1;\n\t\tconst {\n\t\t\tnode: { properties: props2 }\n\t\t} = dnode2;\n\t\tif (dnode1.instance === undefined && typeof widgetConstructor2 === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (widgetConstructor1 !== widgetConstructor2) {\n\t\t\treturn false;\n\t\t}\n\t\tif (props1.key !== props2.key) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!((widgetConstructor1 as any).keys || []).every((key: string) => props1[key] === props2[key])) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction findIndexOfChild(children: DNodeWrapper[], sameAs: DNodeWrapper, start: number) {\n\tfor (let i = start; i < children.length; i++) {\n\t\tif (same(children[i], sameAs)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction createClassPropValue(classes: SupportedClassName | SupportedClassName[] = []) {\n\tlet classNames = '';\n\tif (Array.isArray(classes)) {\n\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\tlet className = classes[i];\n\t\t\tif (className && className !== true) {\n\t\t\t\tclassNames = classNames ? `${classNames} ${className}` : className;\n\t\t\t}\n\t\t}\n\t\treturn classNames;\n\t}\n\tif (classes && classes !== true) {\n\t\tclassNames = classes;\n\t}\n\treturn classNames;\n}\n\nfunction updateAttribute(domNode: Element, attrName: string, attrValue: string | undefined, namespace?: string) {\n\tif (namespace === NAMESPACE_SVG && attrName === 'href' && attrValue) {\n\t\tdomNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n\t} else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n\t\tdomNode.removeAttribute(attrName);\n\t} else {\n\t\tdomNode.setAttribute(attrName, attrValue);\n\t}\n}\n\nfunction arrayFrom(arr: any) {\n\treturn Array.prototype.slice.call(arr);\n}\n\nfunction createFactory(callback: any, middlewares: any, key?: any): any {\n\tconst factory = (properties: any, children?: any) => {\n\t\tif (properties) {\n\t\t\tconst result = w(callback, properties, children);\n\t\t\tcallback.isWidget = true;\n\t\t\tcallback.middlewares = middlewares;\n\t\t\treturn result;\n\t\t}\n\t\treturn {\n\t\t\tmiddlewares,\n\t\t\tcallback\n\t\t};\n\t};\n\tconst keys = Object.keys(middlewares).reduce((keys: string[], middlewareName: any) => {\n\t\tconst middleware = middlewares[middlewareName];\n\t\tif (middleware.keys) {\n\t\t\tkeys = [...keys, ...middleware.keys];\n\t\t}\n\t\treturn keys;\n\t}, key ? [key] : []);\n\n\tfactory.withType = () => {\n\t\treturn factory;\n\t};\n\tcallback.keys = keys;\n\tfactory.keys = keys;\n\tfactory.isFactory = true;\n\treturn factory;\n}\n\ntype KeysMatching<T, V> = { [K in keyof T]: T[K] extends V ? K : never }[keyof T];\n\nexport function create<T extends MiddlewareMap, MiddlewareProps = ReturnType<T[keyof T]>['properties']>(\n\tmiddlewares: T = {} as T\n) {\n\tfunction properties<Props>() {\n\t\tfunction returns<ReturnValue>(\n\t\t\tcallback: Callback<WidgetProperties & Props & UnionToIntersection<MiddlewareProps>, DNode[], T, ReturnValue>\n\t\t): ReturnValue extends RenderResult\n\t\t\t? DefaultChildrenWNodeFactory<{\n\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\tchildren: DNode[];\n\t\t\t  }>\n\t\t\t: MiddlewareResultFactory<\n\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\tDNode[],\n\t\t\t\t\tT,\n\t\t\t\t\tReturnValue\n\t\t\t  > {\n\t\t\treturn createFactory(callback, middlewares);\n\t\t}\n\n\t\tfunction key(key: KeysMatching<Props, string | number>) {\n\t\t\tfunction returns<ReturnValue>(\n\t\t\t\tcallback: Callback<\n\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\tDNode[],\n\t\t\t\t\tT,\n\t\t\t\t\tReturnValue\n\t\t\t\t>\n\t\t\t): ReturnValue extends RenderResult\n\t\t\t\t? DefaultChildrenWNodeFactory<{\n\t\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\tchildren: DNode[];\n\t\t\t\t  }>\n\t\t\t\t: MiddlewareResultFactory<\n\t\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\t\tDNode[],\n\t\t\t\t\t\tT,\n\t\t\t\t\t\tReturnValue\n\t\t\t\t  > {\n\t\t\t\treturn createFactory(callback, middlewares, key);\n\t\t\t}\n\t\t\treturn returns;\n\t\t}\n\n\t\tfunction children<Children>() {\n\t\t\tfunction returns<ReturnValue>(\n\t\t\t\tcallback: Callback<\n\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\tChildren,\n\t\t\t\t\tT,\n\t\t\t\t\tReturnValue\n\t\t\t\t>\n\t\t\t): ReturnValue extends RenderResult\n\t\t\t\t? UnionToIntersection<Children> extends undefined\n\t\t\t\t\t? OptionalWNodeFactory<{\n\t\t\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\t\tchildren: NonNullable<Children>;\n\t\t\t\t\t  }>\n\t\t\t\t\t: WNodeFactory<{\n\t\t\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\t\tchildren: Children;\n\t\t\t\t\t  }>\n\t\t\t\t: MiddlewareResultFactory<\n\t\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\t\tChildren,\n\t\t\t\t\t\tT,\n\t\t\t\t\t\tReturnValue\n\t\t\t\t  > {\n\t\t\t\treturn createFactory(callback, middlewares);\n\t\t\t}\n\n\t\t\tfunction key(key: KeysMatching<Props, string | number>) {\n\t\t\t\tfunction returns<ReturnValue>(\n\t\t\t\t\tcallback: Callback<\n\t\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\t\tChildren,\n\t\t\t\t\t\tT,\n\t\t\t\t\t\tReturnValue\n\t\t\t\t\t>\n\t\t\t\t): ReturnValue extends RenderResult\n\t\t\t\t\t? UnionToIntersection<Children> extends undefined\n\t\t\t\t\t\t? OptionalWNodeFactory<{\n\t\t\t\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\t\t\tchildren: NonNullable<Children>;\n\t\t\t\t\t\t  }>\n\t\t\t\t\t\t: WNodeFactory<{\n\t\t\t\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\t\t\tchildren: Children;\n\t\t\t\t\t\t  }>\n\t\t\t\t\t: MiddlewareResultFactory<\n\t\t\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\t\t\tChildren,\n\t\t\t\t\t\t\tT,\n\t\t\t\t\t\t\tReturnValue\n\t\t\t\t\t  > {\n\t\t\t\t\treturn createFactory(callback, middlewares, key);\n\t\t\t\t}\n\t\t\t\treturn returns;\n\t\t\t}\n\t\t\treturns.key = key;\n\t\t\treturn returns;\n\t\t}\n\t\treturns.children = children;\n\t\treturns.key = key;\n\t\treturn returns;\n\t}\n\n\tfunction children<Children>() {\n\t\tfunction properties<Props>() {\n\t\t\tfunction returns<ReturnValue>(\n\t\t\t\tcallback: Callback<\n\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\tChildren,\n\t\t\t\t\tT,\n\t\t\t\t\tReturnValue\n\t\t\t\t>\n\t\t\t): ReturnValue extends RenderResult\n\t\t\t\t? UnionToIntersection<Children> extends undefined\n\t\t\t\t\t? OptionalWNodeFactory<{\n\t\t\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\t\tchildren: NonNullable<Children>;\n\t\t\t\t\t  }>\n\t\t\t\t\t: WNodeFactory<{\n\t\t\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\t\tchildren: Children;\n\t\t\t\t\t  }>\n\t\t\t\t: MiddlewareResultFactory<\n\t\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\t\tChildren,\n\t\t\t\t\t\tT,\n\t\t\t\t\t\tReturnValue\n\t\t\t\t  > {\n\t\t\t\treturn createFactory(callback, middlewares);\n\t\t\t}\n\t\t\tfunction key(key: KeysMatching<Props, string | number>) {\n\t\t\t\tfunction returns<ReturnValue>(\n\t\t\t\t\tcallback: Callback<\n\t\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\t\tChildren,\n\t\t\t\t\t\tT,\n\t\t\t\t\t\tReturnValue\n\t\t\t\t\t>\n\t\t\t\t): ReturnValue extends RenderResult\n\t\t\t\t\t? UnionToIntersection<Children> extends undefined\n\t\t\t\t\t\t? OptionalWNodeFactory<{\n\t\t\t\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\t\t\tchildren: NonNullable<Children>;\n\t\t\t\t\t\t  }>\n\t\t\t\t\t\t: WNodeFactory<{\n\t\t\t\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\t\t\tchildren: Children;\n\t\t\t\t\t\t  }>\n\t\t\t\t\t: MiddlewareResultFactory<\n\t\t\t\t\t\t\tWidgetProperties & Props & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\t\t\tChildren,\n\t\t\t\t\t\t\tT,\n\t\t\t\t\t\t\tReturnValue\n\t\t\t\t\t  > {\n\t\t\t\t\treturn createFactory(callback, middlewares, key);\n\t\t\t\t}\n\t\t\t\treturn returns;\n\t\t\t}\n\t\t\treturns.key = key;\n\t\t\treturn returns;\n\t\t}\n\n\t\tfunction returns<ReturnValue>(\n\t\t\tcallback: Callback<WidgetProperties & UnionToIntersection<MiddlewareProps>, Children, T, ReturnValue>\n\t\t): ReturnValue extends RenderResult\n\t\t\t? UnionToIntersection<Children> extends undefined\n\t\t\t\t? OptionalWNodeFactory<{\n\t\t\t\t\t\tproperties: WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\tchildren: NonNullable<Children>;\n\t\t\t\t  }>\n\t\t\t\t: WNodeFactory<{\n\t\t\t\t\t\tproperties: WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\t\tchildren: Children;\n\t\t\t\t  }>\n\t\t\t: MiddlewareResultFactory<\n\t\t\t\t\tWidgetProperties & UnionToIntersection<MiddlewareProps>,\n\t\t\t\t\tNonNullable<Children>,\n\t\t\t\t\tT,\n\t\t\t\t\tReturnValue\n\t\t\t  > {\n\t\t\treturn createFactory(callback, middlewares);\n\t\t}\n\t\treturns.properties = properties;\n\t\treturn returns;\n\t}\n\n\tfunction returns<ReturnValue>(\n\t\tcallback: Callback<WidgetProperties & UnionToIntersection<MiddlewareProps>, DNode[], T, ReturnValue>\n\t): ReturnValue extends RenderResult\n\t\t? DefaultChildrenWNodeFactory<{\n\t\t\t\tproperties: WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\tchildren: DNode[];\n\t\t  }>\n\t\t: MiddlewareResultFactory<WidgetProperties & UnionToIntersection<MiddlewareProps>, DNode[], T, ReturnValue> {\n\t\treturn createFactory(callback, middlewares);\n\t}\n\treturns.children = children;\n\treturns.properties = properties;\n\treturn returns;\n}\n\nconst factory = create();\n\nfunction wrapNodes(renderer: () => RenderResult) {\n\tconst result = renderer();\n\tconst isWNodeWrapper = isWNode(result);\n\tconst callback = () => {\n\t\treturn result;\n\t};\n\tcallback.isWNodeWrapper = isWNodeWrapper;\n\treturn factory(callback);\n}\n\nexport const widgetInstanceMap = new WeakMap<WidgetBaseInterface, WidgetData>();\nconst widgetMetaMap = new Map<string, WidgetMeta>();\nconst requestedDomNodes = new Set();\nlet wrapperId = 0;\nlet metaId = 0;\n\nfunction addNodeToMap(id: string, key: string | number, node: HTMLElement) {\n\tconst widgetMeta = widgetMetaMap.get(id);\n\tif (widgetMeta) {\n\t\twidgetMeta.nodeMap = widgetMeta.nodeMap || new Map();\n\t\twidgetMeta.nodeMap.set(key, node);\n\t\tif (requestedDomNodes.has(`${id}-${key}`)) {\n\t\t\twidgetMeta.invalidator();\n\t\t\trequestedDomNodes.delete(`${id}-${key}`);\n\t\t}\n\t}\n}\n\nfunction destroyHandles(meta: WidgetMeta) {\n\tconst { destroyMap, middlewareIds } = meta;\n\tif (!destroyMap) {\n\t\treturn;\n\t}\n\tfor (let i = 0; i < middlewareIds.length; i++) {\n\t\tconst id = middlewareIds[i];\n\t\tconst destroy = destroyMap.get(id);\n\t\tdestroy && destroy();\n\t\tdestroyMap.delete(id);\n\t\tif (destroyMap.size === 0) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tdestroyMap.clear();\n}\n\nfunction runDiffs(meta: WidgetMeta, current: any, next: any) {\n\tlet customProperties: any = {};\n\tmeta.customDiffMap = meta.customDiffMap || new Map();\n\tif (meta.customDiffMap.size) {\n\t\tmeta.customDiffMap.forEach((diffMap) => {\n\t\t\tdiffMap.forEach((diff, propertyName) => {\n\t\t\t\tconst result = diff({ ...current }, { ...next });\n\t\t\t\tif (result) {\n\t\t\t\t\tcustomProperties[propertyName] = result;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\treturn customProperties;\n}\n\nexport const invalidator = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\treturn () => {\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\treturn widgetMeta.invalidator();\n\t\t}\n\t};\n});\n\nexport const node = factory(({ id }) => {\n\treturn {\n\t\tget(key: string | number): HTMLElement | null {\n\t\t\tconst [widgetId] = id.split('-');\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.nodeMap = widgetMeta.nodeMap || new Map();\n\t\t\t\tconst mountNode = widgetMeta.mountNode;\n\t\t\t\tconst node = widgetMeta.nodeMap.get(key);\n\t\t\t\tif (\n\t\t\t\t\tnode &&\n\t\t\t\t\t(mountNode.contains(node) ||\n\t\t\t\t\t\t(global.document.body !== mountNode && global.document.body.contains(node)))\n\t\t\t\t) {\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t\trequestedDomNodes.add(`${widgetId}-${key}`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n});\n\nexport const diffProperty = factory(({ id }) => {\n\tfunction callback<T extends (...args: any) => any, K extends keyof ReturnType<T>>(\n\t\tproperty: K,\n\t\tproperties: T,\n\t\tdiff: (current: ReturnType<T>, next: ReturnType<T>) => void | ReturnType<T>[K]\n\t): void;\n\tfunction callback(propertyName: string, diff: (current: any, next: any) => void): void;\n\tfunction callback(propertyName: string, propertiesOrDiff: any, diff?: any) {\n\t\tconst [widgetId] = id.split('-');\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (!diff) {\n\t\t\tdiff = propertiesOrDiff;\n\t\t}\n\t\tif (widgetMeta) {\n\t\t\twidgetMeta.customDiffMap = widgetMeta.customDiffMap || new Map();\n\t\t\twidgetMeta.customDiffProperties = widgetMeta.customDiffProperties || new Set();\n\t\t\tconst propertyDiffMap = widgetMeta.customDiffMap.get(id) || new Map();\n\t\t\tif (!propertyDiffMap.has(propertyName)) {\n\t\t\t\tconst result = diff({}, widgetMeta.originalProperties);\n\t\t\t\tif (result !== undefined) {\n\t\t\t\t\tif (has('dojo-debug')) {\n\t\t\t\t\t\tif (widgetMeta.propertiesCalled) {\n\t\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t\t`Calling \"propertyDiff\" middleware after accessing properties in \"${\n\t\t\t\t\t\t\t\t\twidgetMeta.widgetName\n\t\t\t\t\t\t\t\t}\", can result in referencing stale properties.`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\twidgetMeta.properties = { ...widgetMeta.properties, [propertyName]: result };\n\t\t\t\t}\n\t\t\t\tpropertyDiffMap.set(propertyName, diff);\n\t\t\t\twidgetMeta.customDiffProperties.add(propertyName);\n\t\t\t}\n\t\t\twidgetMeta.customDiffMap.set(id, propertyDiffMap);\n\t\t}\n\t}\n\n\treturn callback;\n});\n\nexport const destroy = factory(({ id }) => {\n\treturn (destroyFunction: () => void): void => {\n\t\tconst [widgetId] = id.split('-');\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\twidgetMeta.destroyMap = widgetMeta.destroyMap || new Map();\n\t\t\tif (!widgetMeta.destroyMap.has(id)) {\n\t\t\t\twidgetMeta.destroyMap.set(id, destroyFunction);\n\t\t\t}\n\t\t}\n\t};\n});\n\nexport const getRegistry = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\treturn (): RegistryHandler | null => {\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\tif (!widgetMeta.registryHandler) {\n\t\t\t\twidgetMeta.registryHandler = new RegistryHandler();\n\t\t\t\twidgetMeta.registryHandler.base = widgetMeta.registry;\n\t\t\t\twidgetMeta.registryHandler.on('invalidate', widgetMeta.invalidator);\n\t\t\t}\n\t\t\twidgetMeta.registryHandler = widgetMeta.registryHandler || new RegistryHandler();\n\t\t\treturn widgetMeta.registryHandler;\n\t\t}\n\t\treturn null;\n\t};\n});\n\nexport const defer = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\tlet isDeferred = false;\n\treturn {\n\t\tpause() {\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (!isDeferred && widgetMeta) {\n\t\t\t\twidgetMeta.deferRefs = widgetMeta.deferRefs + 1;\n\t\t\t\tisDeferred = true;\n\t\t\t}\n\t\t},\n\t\tresume() {\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (isDeferred && widgetMeta) {\n\t\t\t\twidgetMeta.deferRefs = widgetMeta.deferRefs - 1;\n\t\t\t\tisDeferred = false;\n\t\t\t}\n\t\t}\n\t};\n});\n\nfunction wrapFunctionProperties(id: string, properties: any) {\n\tconst props: any = {};\n\tconst propertyNames = Object.keys(properties);\n\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\tconst propertyName = propertyNames[i];\n\t\tif (typeof properties[propertyName] === 'function') {\n\t\t\tprops[propertyName] = function WrappedProperty(...args: any[]) {\n\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\tif (widgetMeta) {\n\t\t\t\t\treturn widgetMeta.originalProperties[propertyName](...args);\n\t\t\t\t}\n\t\t\t\treturn properties[propertyName](...args);\n\t\t\t};\n\t\t\tprops[propertyName].unwrap = () => {\n\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\tif (widgetMeta) {\n\t\t\t\t\treturn widgetMeta.originalProperties[propertyName];\n\t\t\t\t}\n\t\t\t\treturn properties[propertyName];\n\t\t\t};\n\t\t} else {\n\t\t\tprops[propertyName] = properties[propertyName];\n\t\t}\n\t}\n\treturn props;\n}\n\nexport function renderer(renderer: () => RenderResult): Renderer {\n\tlet _mountOptions: MountOptions & { domNode: HTMLElement } = {\n\t\tsync: false,\n\t\tmerge: true,\n\t\ttransition: undefined,\n\t\tdomNode: global.document.body,\n\t\tregistry: new Registry()\n\t};\n\tlet _invalidationQueue: InvalidationQueueItem[] = [];\n\tlet _processQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _deferredProcessQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _applicationQueue: ApplicationInstruction[] = [];\n\tlet _eventMap = new WeakMap<Function, EventListener>();\n\tlet _idToWrapperMap = new Map<string, DNodeWrapper>();\n\tlet _wrapperSiblingMap = new WeakMap<DNodeWrapper, DNodeWrapper>();\n\tlet _idToChildrenWrappers = new Map<string, DNodeWrapper[]>();\n\tlet _insertBeforeMap: undefined | WeakMap<DNodeWrapper, Node> = new WeakMap<DNodeWrapper, Node>();\n\tlet _nodeToWrapperMap = new WeakMap<VNode | WNode<any>, WNodeWrapper>();\n\tlet _renderScheduled: number | undefined;\n\tlet _deferredRenderCallbacks: Function[] = [];\n\tlet parentInvalidate: () => void;\n\tlet _allMergedNodes: Node[] = [];\n\tlet _appWrapperId: string | undefined;\n\tlet _deferredProcessIds = new Map<number, Function>();\n\n\tfunction nodeOperation(\n\t\tpropName: string,\n\t\tpropValue: (() => boolean) | boolean,\n\t\tpreviousValue: boolean,\n\t\tdomNode: HTMLElement & { [index: string]: any }\n\t): void {\n\t\tlet result = propValue && !previousValue;\n\t\tif (typeof propValue === 'function') {\n\t\t\tresult = propValue();\n\t\t}\n\t\tif (result === true) {\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tdomNode[propName]();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction updateEvent(\n\t\tdomNode: Node,\n\t\teventName: string,\n\t\tcurrentValue: (event: Event) => void,\n\t\tpreviousValue?: Function\n\t) {\n\t\tif (previousValue) {\n\t\t\tconst previousEvent = _eventMap.get(previousValue);\n\t\t\tpreviousEvent && domNode.removeEventListener(eventName, previousEvent);\n\t\t}\n\n\t\tlet callback = currentValue;\n\n\t\tif (eventName === 'input') {\n\t\t\tcallback = function(this: any, evt: Event) {\n\t\t\t\tcurrentValue.call(this, evt);\n\t\t\t\t(evt.target as any)['oninput-value'] = (evt.target as HTMLInputElement).value;\n\t\t\t};\n\t\t}\n\n\t\tdomNode.addEventListener(eventName, callback);\n\t\t_eventMap.set(currentValue, callback);\n\t}\n\n\tfunction removeOrphanedEvents(\n\t\tdomNode: Element,\n\t\tpreviousProperties: VNodeProperties,\n\t\tproperties: VNodeProperties,\n\t\tonlyEvents: boolean = false\n\t) {\n\t\tObject.keys(previousProperties).forEach((propName) => {\n\t\t\tconst isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n\t\t\tconst eventName = onlyEvents ? propName : propName.substr(2);\n\t\t\tif (isEvent && !properties[propName]) {\n\t\t\t\tconst eventCallback = _eventMap.get(previousProperties[propName]);\n\t\t\t\tif (eventCallback) {\n\t\t\t\t\tdomNode.removeEventListener(eventName, eventCallback);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction resolveRegistryItem(wrapper: WNodeWrapper, instance?: any, id?: string) {\n\t\tif (!isWidget(wrapper.node.widgetConstructor)) {\n\t\t\tconst owningNode = _nodeToWrapperMap.get(wrapper.node);\n\t\t\tif (owningNode) {\n\t\t\t\tif (owningNode.instance) {\n\t\t\t\t\tinstance = owningNode.instance;\n\t\t\t\t} else {\n\t\t\t\t\tid = owningNode.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet registry: RegistryHandler | undefined;\n\t\t\tif (instance) {\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance);\n\t\t\t\tif (instanceData) {\n\t\t\t\t\tregistry = instanceData.registry;\n\t\t\t\t}\n\t\t\t} else if (id !== undefined) {\n\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\tif (widgetMeta) {\n\t\t\t\t\tif (!widgetMeta.registryHandler) {\n\t\t\t\t\t\twidgetMeta.registryHandler = new RegistryHandler();\n\t\t\t\t\t\twidgetMeta.registryHandler.base = widgetMeta.registry;\n\t\t\t\t\t\twidgetMeta.registryHandler.on('invalidate', widgetMeta.invalidator);\n\t\t\t\t\t}\n\t\t\t\t\tregistry = widgetMeta.registryHandler;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (registry) {\n\t\t\t\tlet registryLabel: symbol | string;\n\t\t\t\tif (isLazyDefine(wrapper.node.widgetConstructor)) {\n\t\t\t\t\tconst { label, registryItem } = wrapper.node.widgetConstructor;\n\t\t\t\t\tif (!registry.has(label)) {\n\t\t\t\t\t\tregistry.define(label, registryItem);\n\t\t\t\t\t}\n\t\t\t\t\tregistryLabel = label;\n\t\t\t\t} else {\n\t\t\t\t\tregistryLabel = wrapper.node.widgetConstructor as any;\n\t\t\t\t}\n\t\t\t\tlet item = registry.get(registryLabel) as any;\n\t\t\t\tif (isWNodeFactory(item)) {\n\t\t\t\t\tconst node = item(wrapper.node.properties, wrapper.node.children);\n\t\t\t\t\tif (isWidgetFunction(node.widgetConstructor)) {\n\t\t\t\t\t\twrapper.registryItem = node.widgetConstructor;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twrapper.registryItem = item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction mapNodeToInstance(nodes: DNode[], wrapper: WNodeWrapper) {\n\t\twhile (nodes.length) {\n\t\t\tlet node = nodes.pop();\n\t\t\tif (isWNode(node) || isVNode(node)) {\n\t\t\t\tif (!_nodeToWrapperMap.has(node)) {\n\t\t\t\t\t_nodeToWrapperMap.set(node, wrapper);\n\t\t\t\t\tif (node.children && node.children.length) {\n\t\t\t\t\t\tnodes = [...nodes, ...node.children];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction renderedToWrapper(\n\t\trendered: DNode[],\n\t\tparent: DNodeWrapper,\n\t\tcurrentParent: DNodeWrapper | null\n\t): DNodeWrapper[] {\n\t\tconst { requiresInsertBefore, hasPreviousSiblings, namespace, depth } = parent;\n\t\tconst wrappedRendered: DNodeWrapper[] = [];\n\t\tconst hasParentWNode = isWNodeWrapper(parent);\n\t\tconst hasVirtualParentNode = isVirtualWrapper(parent);\n\t\tconst currentParentChildren =\n\t\t\t(isVNodeWrapper(currentParent) && _idToChildrenWrappers.get(currentParent.id)) || [];\n\t\tconst hasCurrentParentChildren = currentParentChildren.length > 0;\n\t\tconst insertBefore =\n\t\t\t((requiresInsertBefore || hasPreviousSiblings !== false) && (hasParentWNode || hasVirtualParentNode)) ||\n\t\t\t(hasCurrentParentChildren && rendered.length > 1);\n\t\tlet previousItem: DNodeWrapper | undefined;\n\t\tif (isWNodeWrapper(parent) && rendered.length) {\n\t\t\tmapNodeToInstance([...rendered], parent);\n\t\t}\n\t\tfor (let i = 0; i < rendered.length; i++) {\n\t\t\tlet renderedItem = rendered[i];\n\t\t\tif (!renderedItem || renderedItem === true) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (typeof renderedItem === 'string') {\n\t\t\t\trenderedItem = toTextVNode(renderedItem);\n\t\t\t}\n\t\t\tconst owningNode = _nodeToWrapperMap.get(renderedItem);\n\t\t\tconst wrapper: DNodeWrapper = {\n\t\t\t\tnode: renderedItem,\n\t\t\t\tdepth: depth + 1,\n\t\t\t\torder: i,\n\t\t\t\tparentId: parent.id,\n\t\t\t\trequiresInsertBefore: insertBefore,\n\t\t\t\thasParentWNode,\n\t\t\t\tnamespace: namespace\n\t\t\t} as DNodeWrapper;\n\t\t\tif (isVNode(renderedItem)) {\n\t\t\t\tif (renderedItem.deferredPropertiesCallback) {\n\t\t\t\t\t(wrapper as VNodeWrapper).deferredProperties = renderedItem.deferredPropertiesCallback(false);\n\t\t\t\t}\n\t\t\t\tif (renderedItem.properties.exitAnimation) {\n\t\t\t\t\tparent.hasAnimations = true;\n\t\t\t\t\tlet nextParent = _idToWrapperMap.get(parent.parentId);\n\t\t\t\t\twhile (nextParent) {\n\t\t\t\t\t\tif (nextParent.hasAnimations) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextParent.hasAnimations = true;\n\t\t\t\t\t\tnextParent = _idToWrapperMap.get(nextParent.parentId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (owningNode) {\n\t\t\t\twrapper.owningId = owningNode.id;\n\t\t\t}\n\t\t\tif (isWNode(renderedItem)) {\n\t\t\t\tresolveRegistryItem(wrapper as WNodeWrapper, (parent as any).instance, (parent as any).id);\n\t\t\t}\n\t\t\tif (previousItem) {\n\t\t\t\t_wrapperSiblingMap.set(previousItem, wrapper);\n\t\t\t}\n\t\t\twrappedRendered.push(wrapper);\n\t\t\tpreviousItem = wrapper;\n\t\t}\n\t\treturn wrappedRendered;\n\t}\n\n\tfunction findParentDomNode(currentNode: DNodeWrapper): Node | undefined {\n\t\tlet parentDomNode: Node | undefined;\n\t\tlet parentWrapper = _idToWrapperMap.get(currentNode.parentId);\n\n\t\twhile (!parentDomNode && parentWrapper) {\n\t\t\tif (\n\t\t\t\t!parentDomNode &&\n\t\t\t\tisVNodeWrapper(parentWrapper) &&\n\t\t\t\t!isVirtualWrapper(parentWrapper) &&\n\t\t\t\tparentWrapper.domNode\n\t\t\t) {\n\t\t\t\tparentDomNode = parentWrapper.domNode;\n\t\t\t}\n\t\t\tparentWrapper = _idToWrapperMap.get(parentWrapper.parentId);\n\t\t}\n\t\treturn parentDomNode;\n\t}\n\n\tfunction runDeferredProperties(next: VNodeWrapper) {\n\t\tconst { deferredPropertiesCallback } = next.node;\n\t\tif (deferredPropertiesCallback) {\n\t\t\tconst properties = next.node.properties;\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tif (_idToWrapperMap.has(next.owningId)) {\n\t\t\t\t\tconst deferredProperties = next.deferredProperties;\n\t\t\t\t\tnext.deferredProperties = deferredPropertiesCallback(true);\n\t\t\t\t\tprocessProperties(next, {\n\t\t\t\t\t\tproperties: { ...deferredProperties, ...properties }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction findInsertBefore(next: DNodeWrapper) {\n\t\tlet insertBefore: Node | null = null;\n\t\tlet searchNode: DNodeWrapper | undefined = next;\n\t\twhile (!insertBefore) {\n\t\t\tconst nextSibling = _wrapperSiblingMap.get(searchNode);\n\t\t\tif (nextSibling) {\n\t\t\t\tif (isBodyWrapper(nextSibling) || isHeadWrapper(nextSibling)) {\n\t\t\t\t\tsearchNode = nextSibling;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet domNode = nextSibling.domNode;\n\t\t\t\tif (isWNodeWrapper(nextSibling) || isVirtualWrapper(nextSibling)) {\n\t\t\t\t\tif (!nextSibling.childDomWrapperId) {\n\t\t\t\t\t\tnextSibling.childDomWrapperId = findDomNodeOnParentWrapper(nextSibling.id);\n\t\t\t\t\t}\n\t\t\t\t\tif (nextSibling.childDomWrapperId) {\n\t\t\t\t\t\tconst childWrapper = _idToWrapperMap.get(nextSibling.childDomWrapperId);\n\t\t\t\t\t\tif (childWrapper && !isBodyWrapper(childWrapper) && !isHeadWrapper(childWrapper)) {\n\t\t\t\t\t\t\tdomNode = childWrapper.domNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (domNode && domNode.parentNode) {\n\t\t\t\t\tinsertBefore = domNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsearchNode = nextSibling;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsearchNode = searchNode && _idToWrapperMap.get(searchNode.parentId);\n\t\t\tif (!searchNode || (isVNodeWrapper(searchNode) && !isVirtualWrapper(searchNode))) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn insertBefore;\n\t}\n\n\tfunction setValue(domNode: any, propValue?: any, previousValue?: any) {\n\t\tconst domValue = domNode.value;\n\t\tconst onInputValue = domNode['oninput-value'];\n\t\tconst onSelectValue = domNode['select-value'];\n\n\t\tif (onSelectValue && domValue !== onSelectValue) {\n\t\t\tdomNode.value = onSelectValue;\n\t\t\tif (domNode.value === onSelectValue) {\n\t\t\t\tdomNode['select-value'] = undefined;\n\t\t\t}\n\t\t} else if ((onInputValue && domValue === onInputValue) || propValue !== previousValue) {\n\t\t\tdomNode.value = propValue;\n\t\t\tdomNode['oninput-value'] = undefined;\n\t\t}\n\t}\n\n\tfunction setProperties(\n\t\tdomNode: HTMLElement,\n\t\tcurrentProperties: VNodeProperties = {},\n\t\tnextWrapper: VNodeWrapper,\n\t\tincludesEventsAndAttributes = true\n\t): void {\n\t\tconst properties = nextWrapper.deferredProperties\n\t\t\t? { ...nextWrapper.deferredProperties, ...nextWrapper.node.properties }\n\t\t\t: nextWrapper.node.properties;\n\t\tconst propNames = Object.keys(properties);\n\t\tconst propCount = propNames.length;\n\t\tif (propNames.indexOf('classes') === -1 && currentProperties.classes) {\n\t\t\tdomNode.removeAttribute('class');\n\t\t}\n\n\t\tincludesEventsAndAttributes && removeOrphanedEvents(domNode, currentProperties, properties);\n\n\t\tfor (let i = 0; i < propCount; i++) {\n\t\t\tconst propName = propNames[i];\n\t\t\tlet propValue = properties[propName];\n\t\t\tconst previousValue = currentProperties[propName];\n\t\t\tif (propName === 'classes') {\n\t\t\t\tconst previousClassString = createClassPropValue(previousValue);\n\t\t\t\tlet currentClassString = createClassPropValue(propValue);\n\t\t\t\tif (previousClassString !== currentClassString) {\n\t\t\t\t\tif (currentClassString) {\n\t\t\t\t\t\tif (nextWrapper.merged) {\n\t\t\t\t\t\t\tconst domClasses = (domNode.getAttribute('class') || '').split(' ');\n\t\t\t\t\t\t\tfor (let i = 0; i < domClasses.length; i++) {\n\t\t\t\t\t\t\t\tif (currentClassString.indexOf(domClasses[i]) === -1) {\n\t\t\t\t\t\t\t\t\tcurrentClassString = `${domClasses[i]} ${currentClassString}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdomNode.setAttribute('class', currentClassString);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdomNode.removeAttribute('class');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (nodeOperations.indexOf(propName) !== -1) {\n\t\t\t\tnodeOperation(propName, propValue, previousValue, domNode);\n\t\t\t} else if (propName === 'styles') {\n\t\t\t\tconst styleNames = Object.keys(propValue);\n\t\t\t\tconst styleCount = styleNames.length;\n\t\t\t\tfor (let j = 0; j < styleCount; j++) {\n\t\t\t\t\tconst styleName = styleNames[j];\n\t\t\t\t\tconst newStyleValue = propValue[styleName];\n\t\t\t\t\tconst oldStyleValue = previousValue && previousValue[styleName];\n\t\t\t\t\tif (newStyleValue === oldStyleValue) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t(domNode.style as any)[styleName] = newStyleValue || '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!propValue && typeof previousValue === 'string') {\n\t\t\t\t\tpropValue = '';\n\t\t\t\t}\n\t\t\t\tif (propName === 'value') {\n\t\t\t\t\tif ((domNode as HTMLElement).tagName === 'SELECT') {\n\t\t\t\t\t\t(domNode as any)['select-value'] = propValue;\n\t\t\t\t\t}\n\t\t\t\t\tsetValue(domNode, propValue, previousValue);\n\t\t\t\t} else if (propName !== 'key' && propValue !== previousValue) {\n\t\t\t\t\tconst type = typeof propValue;\n\t\t\t\t\tif (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateEvent(domNode, propName.substr(2), propValue, previousValue);\n\t\t\t\t\t} else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateAttribute(domNode, propName, propValue, nextWrapper.namespace);\n\t\t\t\t\t} else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n\t\t\t\t\t\tif ((domNode as any)[propName] !== propValue) {\n\t\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _createDeferredRenderCallback(): (() => void) | undefined {\n\t\tconst callbacks = _deferredRenderCallbacks;\n\t\t_deferredRenderCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\treturn () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction _scheduleDeferredRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst run = _createDeferredRenderCallback();\n\t\tif (run) {\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tlet id: number;\n\t\t\t\tid = global.requestAnimationFrame(() => {\n\t\t\t\t\t_deferredProcessIds.delete(id);\n\t\t\t\t\trun();\n\t\t\t\t});\n\t\t\t\t_deferredProcessIds.set(id, run);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction processProperties(next: VNodeWrapper, previousProperties: PreviousProperties) {\n\t\tif (next.node.attributes && next.node.events) {\n\t\t\tupdateAttributes(\n\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\tpreviousProperties.attributes || {},\n\t\t\t\tnext.node.attributes,\n\t\t\t\tnext.namespace\n\t\t\t);\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next, false);\n\t\t\tconst events = next.node.events || {};\n\t\t\tif (previousProperties.events) {\n\t\t\t\tremoveOrphanedEvents(\n\t\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\t\tpreviousProperties.events || {},\n\t\t\t\t\tnext.node.events,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t\tpreviousProperties.events = previousProperties.events || {};\n\t\t\tObject.keys(events).forEach((event) => {\n\t\t\t\tupdateEvent(next.domNode as HTMLElement, event, events[event], previousProperties.events[event]);\n\t\t\t});\n\t\t} else {\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next);\n\t\t}\n\t}\n\n\tfunction unmount() {\n\t\t_processQueue.push({\n\t\t\tcurrent: [_idToWrapperMap.get(_appWrapperId!)!],\n\t\t\tnext: [],\n\t\t\tmeta: {}\n\t\t});\n\t\tif (_renderScheduled) {\n\t\t\tglobal.cancelAnimationFrame(_renderScheduled);\n\t\t}\n\t\t_runProcessQueue();\n\t\t_runDomInstructionQueue();\n\t\t_deferredProcessIds.forEach((callback, id) => {\n\t\t\tglobal.cancelAnimationFrame(id);\n\t\t\tcallback();\n\t\t});\n\t\tconst run = _createDeferredRenderCallback();\n\t\trun && run();\n\t\t_invalidationQueue = [];\n\t\t_processQueue = [];\n\t\t_deferredProcessQueue = [];\n\t\t_applicationQueue = [];\n\t\t_deferredRenderCallbacks = [];\n\t\t_allMergedNodes = [];\n\t\t_eventMap = new WeakMap();\n\t\t_idToWrapperMap.clear();\n\t\t_idToChildrenWrappers.clear();\n\t\t_wrapperSiblingMap = new WeakMap();\n\t\t_nodeToWrapperMap = new WeakMap();\n\t\t_insertBeforeMap = undefined;\n\t}\n\n\tfunction mount(mountOptions: Partial<MountOptions> = {}) {\n\t\tlet domNode = mountOptions.domNode;\n\t\tif (!domNode) {\n\t\t\tif (has('dojo-debug') && domNode === null) {\n\t\t\t\tconsole.warn('Unable to find node to mount the application, defaulting to the document body.');\n\t\t\t}\n\t\t\tdomNode = global.document.body as HTMLElement;\n\t\t}\n\t\t_mountOptions = { ..._mountOptions, ...mountOptions, domNode };\n\t\tconst renderResult = wrapNodes(renderer)({}, []);\n\t\t_appWrapperId = `${wrapperId++}`;\n\t\tconst nextWrapper = {\n\t\t\tid: _appWrapperId,\n\t\t\tnode: renderResult,\n\t\t\torder: 0,\n\t\t\tdepth: 1,\n\t\t\towningId: '-1',\n\t\t\tparentId: '-1',\n\t\t\tsiblingId: '-1',\n\t\t\tproperties: {}\n\t\t};\n\t\t_idToWrapperMap.set('-1', {\n\t\t\tid: `-1`,\n\t\t\tdepth: 0,\n\t\t\torder: 0,\n\t\t\towningId: '',\n\t\t\tdomNode,\n\t\t\tnode: v('fake'),\n\t\t\tparentId: '-1'\n\t\t});\n\t\t_processQueue.push({\n\t\t\tcurrent: [],\n\t\t\tnext: [nextWrapper],\n\t\t\tmeta: { mergeNodes: arrayFrom(domNode.childNodes) }\n\t\t});\n\t\t_runProcessQueue();\n\t\t_runDomInstructionQueue();\n\t\t_cleanUpMergedNodes();\n\t\t_insertBeforeMap = undefined;\n\t\t_scheduleDeferredRenderCallbacks();\n\t\tif (!_renderScheduled) {\n\t\t\tsetRendering(false);\n\t\t}\n\t}\n\n\tfunction invalidate() {\n\t\tparentInvalidate && parentInvalidate();\n\t}\n\n\tfunction _schedule(): void {\n\t\tconst { sync } = _mountOptions;\n\t\tif (sync) {\n\t\t\t_runInvalidationQueue();\n\t\t} else if (!_renderScheduled) {\n\t\t\tsetRendering(true);\n\t\t\t_renderScheduled = global.requestAnimationFrame(() => {\n\t\t\t\t_runInvalidationQueue();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction getWNodeWrapper(id: string) {\n\t\tconst wrapper = _idToWrapperMap.get(id);\n\t\tif (wrapper && isWNodeWrapper(wrapper)) {\n\t\t\treturn wrapper;\n\t\t}\n\t}\n\n\tfunction _runInvalidationQueue() {\n\t\t_renderScheduled = undefined;\n\t\tlet invalidationQueue = [..._invalidationQueue];\n\t\tconst previouslyRendered = [];\n\t\t_invalidationQueue = [];\n\t\tinvalidationQueue.sort((a, b) => {\n\t\t\tlet result = b.depth - a.depth;\n\t\t\tif (result === 0) {\n\t\t\t\tresult = b.order - a.order;\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t\tif (_deferredProcessQueue.length) {\n\t\t\t_processQueue = [..._deferredProcessQueue];\n\t\t\t_deferredProcessQueue = [];\n\t\t\t_runProcessQueue();\n\t\t\tif (_deferredProcessQueue.length) {\n\t\t\t\t_invalidationQueue = [...invalidationQueue];\n\t\t\t\tinvalidationQueue = [];\n\t\t\t}\n\t\t}\n\t\tlet item: InvalidationQueueItem | undefined;\n\t\twhile ((item = invalidationQueue.pop())) {\n\t\t\tlet { id } = item;\n\t\t\tconst current = getWNodeWrapper(id);\n\t\t\tif (!current || previouslyRendered.indexOf(id) !== -1 || !_idToWrapperMap.has(current.parentId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpreviouslyRendered.push(id);\n\t\t\tconst sibling = _wrapperSiblingMap.get(current);\n\t\t\tconst next = {\n\t\t\t\tnode: {\n\t\t\t\t\ttype: WNODE,\n\t\t\t\t\twidgetConstructor: current.node.widgetConstructor,\n\t\t\t\t\tproperties: current.properties || {},\n\t\t\t\t\tchildren: current.node.children || []\n\t\t\t\t},\n\t\t\t\tinstance: current.instance,\n\t\t\t\tid: current.id,\n\t\t\t\tproperties: current.properties,\n\t\t\t\tdepth: current.depth,\n\t\t\t\torder: current.order,\n\t\t\t\towningId: current.owningId,\n\t\t\t\tparentId: current.parentId,\n\t\t\t\tregistryItem: current.registryItem\n\t\t\t};\n\n\t\t\tsibling && _wrapperSiblingMap.set(next, sibling);\n\t\t\tconst result = _updateWidget({ current, next });\n\t\t\tif (result && result.item) {\n\t\t\t\t_processQueue.push(result.item);\n\t\t\t\t_idToWrapperMap.set(id, next);\n\t\t\t\t_runProcessQueue();\n\t\t\t}\n\t\t}\n\t\t_runDomInstructionQueue();\n\t\t_cleanUpMergedNodes();\n\t\t_scheduleDeferredRenderCallbacks();\n\t\tif (!_renderScheduled) {\n\t\t\tsetRendering(false);\n\t\t}\n\t}\n\n\tfunction _cleanUpMergedNodes() {\n\t\tif (_deferredProcessQueue.length === 0) {\n\t\t\tlet mergedNode: Node | undefined;\n\t\t\twhile ((mergedNode = _allMergedNodes.pop())) {\n\t\t\t\tmergedNode.parentNode && mergedNode.parentNode.removeChild(mergedNode);\n\t\t\t}\n\t\t\t_mountOptions.merge = false;\n\t\t}\n\t}\n\n\tfunction _runProcessQueue() {\n\t\tlet item: DetachApplication | AttachApplication | ProcessItem | undefined;\n\t\twhile ((item = _processQueue.pop())) {\n\t\t\tif (isAttachApplication(item)) {\n\t\t\t\titem.instance && _applicationQueue.push(item as any);\n\t\t\t} else {\n\t\t\t\tconst { current, next, meta } = item;\n\t\t\t\t_process(current || EMPTY_ARRAY, next || EMPTY_ARRAY, meta);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _runDomInstructionQueue(): void {\n\t\t_applicationQueue.reverse();\n\t\tlet item: ApplicationInstruction | undefined;\n\t\twhile ((item = _applicationQueue.pop())) {\n\t\t\tif (item.type === 'create') {\n\t\t\t\tconst {\n\t\t\t\t\tparentDomNode,\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode, merged, requiresInsertBefore, node }\n\t\t\t\t} = item;\n\n\t\t\t\tprocessProperties(next, { properties: {} });\n\t\t\t\trunDeferredProperties(next);\n\t\t\t\tif (!merged) {\n\t\t\t\t\tlet insertBefore: any;\n\t\t\t\t\tif (requiresInsertBefore) {\n\t\t\t\t\t\tinsertBefore = findInsertBefore(next);\n\t\t\t\t\t} else if (_insertBeforeMap) {\n\t\t\t\t\t\tinsertBefore = _insertBeforeMap.get(next);\n\t\t\t\t\t}\n\t\t\t\t\tparentDomNode.insertBefore(domNode!, insertBefore);\n\t\t\t\t\tif (isDomVNode(next.node) && next.node.onAttach) {\n\t\t\t\t\t\tnext.node.onAttach();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((domNode as HTMLElement).tagName === 'OPTION' && domNode!.parentElement) {\n\t\t\t\t\tsetValue(domNode!.parentElement);\n\t\t\t\t}\n\t\t\t\tconst { enterAnimation, enterAnimationActive } = node.properties;\n\t\t\t\tif (_mountOptions.transition && enterAnimation && enterAnimation !== true) {\n\t\t\t\t\t_mountOptions.transition.enter(domNode as HTMLElement, enterAnimation, enterAnimationActive);\n\t\t\t\t}\n\t\t\t\tconst owningWrapper = _nodeToWrapperMap.get(next.node);\n\t\t\t\tif (owningWrapper && node.properties.key != null) {\n\t\t\t\t\tif (owningWrapper.instance) {\n\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(owningWrapper.instance);\n\t\t\t\t\t\tinstanceData && instanceData.nodeHandler.add(domNode as HTMLElement, `${node.properties.key}`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddNodeToMap(owningWrapper.id, node.properties.key, domNode as HTMLElement);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\titem.next.inserted = true;\n\t\t\t} else if (item.type === 'update') {\n\t\t\t\tconst {\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode },\n\t\t\t\t\tcurrent,\n\t\t\t\t\tcurrent: { domNode: currentDomNode }\n\t\t\t\t} = item;\n\t\t\t\tif (isTextNode(domNode) && isTextNode(currentDomNode) && domNode !== currentDomNode) {\n\t\t\t\t\tcurrentDomNode.parentNode && currentDomNode.parentNode.replaceChild(domNode, currentDomNode);\n\t\t\t\t} else {\n\t\t\t\t\tconst previousProperties = buildPreviousProperties(domNode, current);\n\t\t\t\t\tprocessProperties(next, previousProperties);\n\t\t\t\t\trunDeferredProperties(next);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'delete') {\n\t\t\t\tconst { current } = item;\n\t\t\t\tconst { exitAnimation, exitAnimationActive } = current.node.properties;\n\t\t\t\tif (_mountOptions.transition && exitAnimation && exitAnimation !== true) {\n\t\t\t\t\t_mountOptions.transition.exit(current.domNode as HTMLElement, exitAnimation, exitAnimationActive);\n\t\t\t\t} else {\n\t\t\t\t\tcurrent.domNode!.parentNode!.removeChild(current.domNode!);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'attach') {\n\t\t\t\tconst { instance, attached } = item;\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance);\n\t\t\t\tif (instanceData) {\n\t\t\t\t\tinstanceData.nodeHandler.addRoot();\n\t\t\t\t\tattached && instanceData.onAttach();\n\t\t\t\t}\n\t\t\t} else if (item.type === 'detach') {\n\t\t\t\tif (item.current.instance) {\n\t\t\t\t\tconst instanceData = widgetInstanceMap.get(item.current.instance);\n\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t}\n\t\t\t\titem.current.instance = undefined;\n\t\t\t}\n\t\t}\n\t\tif (_deferredProcessQueue.length === 0) {\n\t\t\t_nodeToWrapperMap = new WeakMap();\n\t\t}\n\t}\n\n\tfunction _processMergeNodes(next: DNodeWrapper, mergeNodes: Node[]) {\n\t\tconst { merge } = _mountOptions;\n\t\tif (merge && mergeNodes.length) {\n\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\tlet {\n\t\t\t\t\tnode: { tag }\n\t\t\t\t} = next;\n\t\t\t\tfor (let i = 0; i < mergeNodes.length; i++) {\n\t\t\t\t\tconst domElement = mergeNodes[i] as Element;\n\t\t\t\t\tconst tagName = domElement.tagName || '';\n\t\t\t\t\tif (tag.toUpperCase() === tagName.toUpperCase()) {\n\t\t\t\t\t\tconst mergeNodeIndex = _allMergedNodes.indexOf(domElement);\n\t\t\t\t\t\tif (mergeNodeIndex !== -1) {\n\t\t\t\t\t\t\t_allMergedNodes.splice(mergeNodeIndex, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmergeNodes.splice(i, 1);\n\t\t\t\t\t\tnext.domNode = domElement;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnext.mergeNodes = mergeNodes;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction distinguishableCheck(childNodes: DNodeWrapper[], index: number) {\n\t\tconst parentWNodeWrapper = getWNodeWrapper(childNodes[index].owningId);\n\t\tcheckDistinguishable(childNodes, index, parentWNodeWrapper);\n\t}\n\n\tfunction createKeyMap(wrappers: DNodeWrapper[]): (string | number)[] | false {\n\t\tconst keys: (string | number)[] = [];\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tconst wrapper = wrappers[i];\n\t\t\tif (wrapper.node.properties.key != null) {\n\t\t\t\tkeys.push(wrapper.node.properties.key);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn keys;\n\t}\n\n\tfunction _process(current: DNodeWrapper[], next: DNodeWrapper[], meta: ProcessMeta = {}): void {\n\t\tlet { mergeNodes = [], oldIndex = 0, newIndex = 0 } = meta;\n\t\tconst currentLength = current.length;\n\t\tconst nextLength = next.length;\n\t\tconst hasPreviousSiblings = currentLength > 1 || (currentLength > 0 && currentLength < nextLength);\n\t\tlet instructions: Instruction[] = [];\n\t\tlet replace = false;\n\t\tif (oldIndex === 0 && newIndex === 0 && currentLength) {\n\t\t\tconst currentKeys = createKeyMap(current);\n\t\t\tif (currentKeys) {\n\t\t\t\tconst nextKeys = createKeyMap(next);\n\t\t\t\tif (nextKeys) {\n\t\t\t\t\tfor (let i = 0; i < currentKeys.length; i++) {\n\t\t\t\t\t\tif (nextKeys.indexOf(currentKeys[i]) !== -1) {\n\t\t\t\t\t\t\tinstructions = [];\n\t\t\t\t\t\t\treplace = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treplace = true;\n\t\t\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (replace || (currentLength === 0 && !_mountOptions.merge)) {\n\t\t\tfor (let i = 0; i < next.length; i++) {\n\t\t\t\tinstructions.push({ current: undefined, next: next[i] });\n\t\t\t}\n\t\t} else {\n\t\t\tif (newIndex < nextLength) {\n\t\t\t\tlet currentWrapper = oldIndex < currentLength ? current[oldIndex] : undefined;\n\t\t\t\tconst nextWrapper = next[newIndex];\n\t\t\t\tnextWrapper.hasPreviousSiblings = hasPreviousSiblings;\n\n\t\t\t\t_processMergeNodes(nextWrapper, mergeNodes);\n\n\t\t\t\tif (currentWrapper && same(currentWrapper, nextWrapper)) {\n\t\t\t\t\toldIndex++;\n\t\t\t\t\tnewIndex++;\n\t\t\t\t\tif (isVNodeWrapper(currentWrapper) && isVNodeWrapper(nextWrapper)) {\n\t\t\t\t\t\tnextWrapper.inserted = currentWrapper.inserted;\n\t\t\t\t\t}\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: nextWrapper });\n\t\t\t\t} else if (!currentWrapper || findIndexOfChild(current, nextWrapper, oldIndex + 1) === -1) {\n\t\t\t\t\thas('dojo-debug') && current.length && distinguishableCheck(next, newIndex);\n\t\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\t\tnewIndex++;\n\t\t\t\t} else if (findIndexOfChild(next, currentWrapper, newIndex + 1) === -1) {\n\t\t\t\t\thas('dojo-debug') && distinguishableCheck(current, oldIndex);\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\t\toldIndex++;\n\t\t\t\t} else {\n\t\t\t\t\thas('dojo-debug') && distinguishableCheck(next, newIndex);\n\t\t\t\t\thas('dojo-debug') && distinguishableCheck(current, oldIndex);\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\t\toldIndex++;\n\t\t\t\t\tnewIndex++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (newIndex < nextLength) {\n\t\t\t\t_processQueue.push({ current, next, meta: { mergeNodes, oldIndex, newIndex } });\n\t\t\t}\n\t\t\tif (currentLength > oldIndex && newIndex >= nextLength) {\n\t\t\t\tfor (let i = oldIndex; i < currentLength; i++) {\n\t\t\t\t\thas('dojo-debug') && distinguishableCheck(current, i);\n\t\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < instructions.length; i++) {\n\t\t\tconst result = _processOne(instructions[i]);\n\t\t\tif (result === false) {\n\t\t\t\tif (_mountOptions.merge && mergeNodes.length) {\n\t\t\t\t\tif (newIndex < nextLength) {\n\t\t\t\t\t\t_processQueue.pop();\n\t\t\t\t\t}\n\t\t\t\t\t_processQueue.push({ next, current, meta });\n\t\t\t\t\t_deferredProcessQueue = _processQueue;\n\t\t\t\t\t_processQueue = [];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst { widget, item, dom } = result;\n\t\t\twidget && _processQueue.push(widget);\n\t\t\titem && _processQueue.push(item);\n\t\t\tdom && _applicationQueue.push(dom);\n\t\t}\n\t}\n\n\tfunction _processOne({ current, next }: Instruction): ProcessResult | false {\n\t\tif (current !== next) {\n\t\t\tif (!current && next) {\n\t\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\t\treturn _createDom({ next });\n\t\t\t\t} else {\n\t\t\t\t\treturn _createWidget({ next });\n\t\t\t\t}\n\t\t\t} else if (current && next) {\n\t\t\t\tif (isVNodeWrapper(current) && isVNodeWrapper(next)) {\n\t\t\t\t\treturn _updateDom({ current, next });\n\t\t\t\t} else if (isWNodeWrapper(current) && isWNodeWrapper(next)) {\n\t\t\t\t\treturn _updateWidget({ current, next });\n\t\t\t\t}\n\t\t\t} else if (current && !next) {\n\t\t\t\tif (isVNodeWrapper(current)) {\n\t\t\t\t\treturn _removeDom({ current });\n\t\t\t\t} else if (isWNodeWrapper(current)) {\n\t\t\t\t\treturn _removeWidget({ current });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t}\n\n\tfunction createWidgetOptions(id: string, widgetId: string, middleware?: any) {\n\t\treturn {\n\t\t\tid,\n\t\t\tproperties: () => {\n\t\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\t\tif (widgetMeta) {\n\t\t\t\t\twidgetMeta.propertiesCalled = true;\n\t\t\t\t\treturn { ...widgetMeta.properties };\n\t\t\t\t}\n\t\t\t\treturn {};\n\t\t\t},\n\t\t\tchildren: () => {\n\t\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\t\tif (widgetMeta) {\n\t\t\t\t\treturn widgetMeta.children;\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t},\n\t\t\tmiddleware\n\t\t};\n\t}\n\n\tfunction resolveMiddleware(\n\t\tmiddlewares: any,\n\t\tid: string,\n\t\tmiddlewareIds: string[] = []\n\t): { middlewares: any; ids: string[] } {\n\t\tconst keys = Object.keys(middlewares);\n\t\tconst results: any = {};\n\t\tconst uniqueId = `${id}-${metaId++}`;\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst middleware = middlewares[keys[i]]();\n\t\t\tconst payload = createWidgetOptions(uniqueId, id);\n\t\t\tif (middleware.middlewares) {\n\t\t\t\tconst { middlewares: resolvedMiddleware } = resolveMiddleware(\n\t\t\t\t\tmiddleware.middlewares,\n\t\t\t\t\tid,\n\t\t\t\t\tmiddlewareIds\n\t\t\t\t);\n\t\t\t\tpayload.middleware = resolvedMiddleware;\n\t\t\t\tresults[keys[i]] = middleware.callback(payload);\n\t\t\t} else {\n\t\t\t\tresults[keys[i]] = middleware.callback(payload);\n\t\t\t}\n\t\t}\n\t\tmiddlewareIds.push(uniqueId);\n\t\treturn { middlewares: results, ids: middlewareIds };\n\t}\n\n\tfunction _createWidget({ next }: CreateWidgetInstruction): ProcessResult | false {\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tlet { registry } = _mountOptions;\n\t\tlet Constructor = next.registryItem || widgetConstructor;\n\t\tif (!isWidget(Constructor)) {\n\t\t\tresolveRegistryItem(next);\n\t\t\tif (!next.registryItem) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tConstructor = next.registryItem;\n\t\t}\n\n\t\tlet rendered: RenderResult;\n\t\tlet invalidate: () => void;\n\t\tnext.properties = { ...next.node.properties };\n\t\tnext.id = next.id || `${wrapperId++}`;\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tconst { id, depth, order } = next;\n\t\tif (!isWidgetBaseConstructor(Constructor)) {\n\t\t\tlet widgetMeta = widgetMetaMap.get(id);\n\t\t\tif (!widgetMeta) {\n\t\t\t\tinvalidate = () => {\n\t\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\t\tif (widgetMeta) {\n\t\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t\t\tif (!widgetMeta.rendering && _idToWrapperMap.has(id)) {\n\t\t\t\t\t\t\t_invalidationQueue.push({ id, depth, order });\n\t\t\t\t\t\t\t_schedule();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\twidgetMeta = {\n\t\t\t\t\twidgetName: Constructor.name || 'unknown',\n\t\t\t\t\tmountNode: _mountOptions.domNode,\n\t\t\t\t\tdirty: false,\n\t\t\t\t\tinvalidator: invalidate,\n\t\t\t\t\tproperties: wrapFunctionProperties(id, next.node.properties),\n\t\t\t\t\toriginalProperties: { ...next.node.properties },\n\t\t\t\t\tchildren: next.node.children,\n\t\t\t\t\tdeferRefs: 0,\n\t\t\t\t\trendering: true,\n\t\t\t\t\tmiddleware: {},\n\t\t\t\t\tmiddlewareIds: [],\n\t\t\t\t\tregistry: _mountOptions.registry,\n\t\t\t\t\tpropertiesCalled: false\n\t\t\t\t};\n\n\t\t\t\twidgetMetaMap.set(next.id, widgetMeta);\n\t\t\t\tif ((Constructor as any).middlewares && Object.keys((Constructor as any).middlewares).length) {\n\t\t\t\t\tconst { middlewares, ids } = resolveMiddleware((Constructor as any).middlewares, id);\n\t\t\t\t\twidgetMeta.middleware = middlewares;\n\t\t\t\t\twidgetMeta.middlewareIds = ids;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tinvalidate = widgetMeta.invalidator;\n\t\t\t}\n\n\t\t\trendered = Constructor(createWidgetOptions(id, id, widgetMeta.middleware));\n\t\t\twidgetMeta.rendering = false;\n\t\t\twidgetMeta.propertiesCalled = false;\n\t\t\tif (widgetMeta.deferRefs > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tlet instance = new Constructor() as WidgetBaseInterface & {\n\t\t\t\tinvalidate: any;\n\t\t\t\tregistry: any;\n\t\t\t};\n\t\t\tinstance.registry.base = registry;\n\t\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\t\tinvalidate = () => {\n\t\t\t\tinstanceData.dirty = true;\n\t\t\t\tif (!instanceData.rendering && _idToWrapperMap.has(id)) {\n\t\t\t\t\t_invalidationQueue.push({ id, depth, order });\n\t\t\t\t\t_schedule();\n\t\t\t\t}\n\t\t\t};\n\t\t\tinstanceData.invalidate = invalidate;\n\t\t\tinstanceData.rendering = true;\n\t\t\tinstance.__setProperties__(next.node.properties);\n\t\t\tinstance.__setChildren__(next.node.children);\n\t\t\tnext.instance = instance;\n\t\t\trendered = instance.__render__();\n\t\t\tinstanceData.rendering = false;\n\t\t}\n\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tchildren = renderedToWrapper(rendered, next, null);\n\t\t\t_idToChildrenWrappers.set(id, children);\n\t\t}\n\n\t\tif (!parentInvalidate && !(Constructor as any).isWNodeWrapper) {\n\t\t\tparentInvalidate = invalidate;\n\t\t}\n\n\t\treturn {\n\t\t\titem: {\n\t\t\t\tnext: children,\n\t\t\t\tmeta: { mergeNodes: next.mergeNodes }\n\t\t\t},\n\t\t\twidget: { type: 'attach', instance: next.instance, id, attached: true }\n\t\t};\n\t}\n\n\tfunction _updateWidget({ current, next }: UpdateWidgetInstruction): ProcessResult {\n\t\tcurrent = getWNodeWrapper(current.id) || current;\n\t\tconst { instance, domNode, hasAnimations, id } = current;\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tconst Constructor = next.registryItem || widgetConstructor;\n\n\t\tif (!isWidget(Constructor)) {\n\t\t\treturn {};\n\t\t}\n\t\tlet rendered: RenderResult;\n\t\tlet processResult: ProcessResult = {};\n\t\tlet didRender = false;\n\t\tlet currentChildren = _idToChildrenWrappers.get(current.id);\n\t\tnext.hasAnimations = hasAnimations;\n\t\tnext.id = id;\n\t\tnext.properties = { ...next.node.properties };\n\t\t_wrapperSiblingMap.delete(current);\n\t\tif (domNode && domNode.parentNode) {\n\t\t\tnext.domNode = domNode;\n\t\t}\n\n\t\tif (!isWidgetBaseConstructor(Constructor)) {\n\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.originalProperties = { ...next.properties };\n\t\t\t\twidgetMeta.properties = wrapFunctionProperties(id, widgetMeta.originalProperties);\n\t\t\t\twidgetMeta.children = next.node.children;\n\t\t\t\twidgetMeta.rendering = true;\n\t\t\t\tconst customProperties = runDiffs(widgetMeta, current.properties, widgetMeta.originalProperties);\n\t\t\t\twidgetMeta.properties = { ...widgetMeta.properties, ...customProperties };\n\t\t\t\tif (current.node.children.length > 0 || next.node.children.length > 0) {\n\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t}\n\t\t\t\tif (!widgetMeta.dirty) {\n\t\t\t\t\tpropertiesDiff(\n\t\t\t\t\t\tcurrent.properties,\n\t\t\t\t\t\tnext.properties,\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t\t\t},\n\t\t\t\t\t\twidgetMeta.customDiffProperties ? [...widgetMeta.customDiffProperties.values()] : []\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (widgetMeta.dirty) {\n\t\t\t\t\t_idToChildrenWrappers.delete(id);\n\t\t\t\t\tdidRender = true;\n\t\t\t\t\trendered = Constructor(createWidgetOptions(id, id, widgetMeta.middleware));\n\t\t\t\t\twidgetMeta.dirty = false;\n\t\t\t\t\tif (widgetMeta.deferRefs > 0) {\n\t\t\t\t\t\trendered = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twidgetMeta.rendering = false;\n\t\t\t\twidgetMeta.propertiesCalled = false;\n\t\t\t}\n\t\t} else {\n\t\t\tconst instanceData = widgetInstanceMap.get(instance!)!;\n\t\t\tnext.instance = instance;\n\t\t\tinstanceData.rendering = true;\n\t\t\tinstance!.__setProperties__(next.node.properties);\n\t\t\tinstance!.__setChildren__(next.node.children);\n\t\t\tif (instanceData.dirty) {\n\t\t\t\tdidRender = true;\n\t\t\t\t_idToChildrenWrappers.delete(id);\n\t\t\t\trendered = instance!.__render__();\n\t\t\t}\n\t\t\tinstanceData.rendering = false;\n\t\t}\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tprocessResult.widget = { type: 'attach', instance, id, attached: false };\n\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tchildren = renderedToWrapper(rendered, next, current);\n\t\t\t_idToChildrenWrappers.set(id, children);\n\t\t}\n\n\t\tif (didRender) {\n\t\t\tprocessResult.item = {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tnext: children,\n\t\t\t\tmeta: {}\n\t\t\t};\n\t\t}\n\t\treturn processResult;\n\t}\n\n\tfunction _removeWidget({ current }: RemoveWidgetInstruction): ProcessResult {\n\t\tcurrent = getWNodeWrapper(current.id) || current;\n\t\t_idToWrapperMap.delete(current.id);\n\t\tconst meta = widgetMetaMap.get(current.id);\n\t\tlet currentChildren = _idToChildrenWrappers.get(current.id);\n\t\t_idToChildrenWrappers.delete(current.id);\n\t\t_wrapperSiblingMap.delete(current);\n\t\tlet processResult: ProcessResult = {\n\t\t\titem: {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tmeta: {}\n\t\t\t}\n\t\t};\n\t\tif (meta) {\n\t\t\tmeta.registryHandler && meta.registryHandler.destroy();\n\t\t\tdestroyHandles(meta);\n\t\t\twidgetMetaMap.delete(current.id);\n\t\t} else {\n\t\t\tprocessResult.widget = { type: 'detach', current, instance: current.instance };\n\t\t}\n\n\t\treturn processResult;\n\t}\n\n\tfunction findDomNodeOnParentWrapper(id: string): string | undefined {\n\t\tconst children = _idToChildrenWrappers.get(id) || [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst child = children[i];\n\t\t\tif (child.domNode) {\n\t\t\t\treturn child.id;\n\t\t\t}\n\t\t\tconst childId = findDomNodeOnParentWrapper(child.id);\n\t\t\tif (childId) {\n\t\t\t\treturn childId;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _createDom({ next }: CreateDomInstruction): ProcessResult {\n\t\tconst parentDomNode = findParentDomNode(next)!;\n\t\tconst isVirtual = isVirtualWrapper(next);\n\t\tconst isBody = isBodyWrapper(next);\n\t\tconst isHead = isHeadWrapper(next);\n\t\tlet mergeNodes: Node[] = [];\n\t\tnext.id = `${wrapperId++}`;\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tif (!next.domNode) {\n\t\t\tif ((next.node as any).domNode) {\n\t\t\t\tnext.domNode = (next.node as any).domNode;\n\t\t\t} else {\n\t\t\t\tif (next.node.tag === 'svg') {\n\t\t\t\t\tnext.namespace = NAMESPACE_SVG;\n\t\t\t\t}\n\t\t\t\tif (isBody) {\n\t\t\t\t\tnext.domNode = global.document.body;\n\t\t\t\t} else if (isHead) {\n\t\t\t\t\tnext.domNode = global.document.head;\n\t\t\t\t} else if (next.node.tag && !isVirtual) {\n\t\t\t\t\tif (next.namespace) {\n\t\t\t\t\t\tnext.domNode = global.document.createElementNS(next.namespace, next.node.tag);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext.domNode = global.document.createElement(next.node.tag);\n\t\t\t\t\t}\n\t\t\t\t} else if (next.node.text != null) {\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_insertBeforeMap && _allMergedNodes.length) {\n\t\t\t\tif (parentDomNode === _allMergedNodes[0].parentNode) {\n\t\t\t\t\t_insertBeforeMap.set(next, _allMergedNodes[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (_mountOptions.merge) {\n\t\t\tnext.merged = true;\n\t\t\tif (isTextNode(next.domNode)) {\n\t\t\t\tif (next.domNode.data !== next.node.text) {\n\t\t\t\t\t_allMergedNodes = [next.domNode, ..._allMergedNodes];\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t\tnext.merged = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmergeNodes = arrayFrom(next.domNode.childNodes);\n\t\t\t\t_allMergedNodes = [..._allMergedNodes, ...mergeNodes];\n\t\t\t}\n\t\t}\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (next.domNode || isVirtual) {\n\t\t\tif (next.node.children && next.node.children.length) {\n\t\t\t\tchildren = renderedToWrapper(next.node.children, next, null);\n\t\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t\t}\n\t\t}\n\t\tconst dom: ApplicationInstruction | undefined = isSpecialWrapper(next)\n\t\t\t? undefined\n\t\t\t: {\n\t\t\t\t\tnext: next!,\n\t\t\t\t\tparentDomNode: parentDomNode,\n\t\t\t\t\ttype: 'create'\n\t\t\t  };\n\t\tif (children) {\n\t\t\treturn {\n\t\t\t\titem: {\n\t\t\t\t\tcurrent: [],\n\t\t\t\t\tnext: children,\n\t\t\t\t\tmeta: { mergeNodes }\n\t\t\t\t},\n\t\t\t\tdom,\n\t\t\t\twidget: isVirtual ? { type: 'attach', id: (next as any).id, attached: false } : undefined\n\t\t\t};\n\t\t}\n\t\treturn { dom };\n\t}\n\n\tfunction _updateDom({ current, next }: UpdateDomInstruction): ProcessResult {\n\t\tnext.domNode = current.domNode;\n\t\tnext.namespace = current.namespace;\n\t\tnext.id = current.id;\n\t\tnext.childDomWrapperId = current.childDomWrapperId;\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tlet currentChildren = _idToChildrenWrappers.get(next.id);\n\t\tif (next.node.text != null && next.node.text !== current.node.text) {\n\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t} else if (next.node.children) {\n\t\t\tchildren = renderedToWrapper(next.node.children, next, current);\n\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t}\n\t\t_wrapperSiblingMap.delete(current);\n\t\t_idToWrapperMap.set(next.id, next);\n\t\treturn {\n\t\t\titem: {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tnext: children,\n\t\t\t\tmeta: {}\n\t\t\t},\n\t\t\tdom: { type: 'update', next, current }\n\t\t};\n\t}\n\n\tfunction _removeDom({ current }: RemoveDomInstruction): ProcessResult {\n\t\tconst isSpecial = isSpecialWrapper(current);\n\t\tconst children = _idToChildrenWrappers.get(current.id);\n\t\t_idToChildrenWrappers.delete(current.id);\n\t\t_idToWrapperMap.delete(current.id);\n\t\t_wrapperSiblingMap.delete(current);\n\t\tif (current.node.properties.key) {\n\t\t\tconst widgetMeta = widgetMetaMap.get(current.owningId);\n\t\t\tconst parentWrapper = getWNodeWrapper(current.owningId);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.nodeMap && widgetMeta.nodeMap.delete(current.node.properties.key);\n\t\t\t} else if (parentWrapper && parentWrapper.instance) {\n\t\t\t\tconst instanceData = widgetInstanceMap.get(parentWrapper.instance);\n\t\t\t\tinstanceData && instanceData.nodeHandler.remove(current.node.properties.key);\n\t\t\t}\n\t\t}\n\t\tif (current.hasAnimations || isSpecial) {\n\t\t\treturn {\n\t\t\t\titem: { current: children, meta: {} },\n\t\t\t\tdom: isSpecial ? undefined : { type: 'delete', current }\n\t\t\t};\n\t\t}\n\n\t\tif (children) {\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tlet wrappers = children || [];\n\t\t\t\tlet wrapper: DNodeWrapper | undefined;\n\t\t\t\tlet specialIds = [];\n\t\t\t\twhile ((wrapper = wrappers.pop())) {\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\twrapper = getWNodeWrapper(wrapper.id) || wrapper;\n\t\t\t\t\t\tif (wrapper.instance) {\n\t\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(wrapper.instance);\n\t\t\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t\t\t\twrapper.instance = undefined;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst meta = widgetMetaMap.get(wrapper.id);\n\t\t\t\t\t\t\tif (meta) {\n\t\t\t\t\t\t\t\tmeta.registryHandler && meta.registryHandler.destroy();\n\t\t\t\t\t\t\t\tdestroyHandles(meta);\n\t\t\t\t\t\t\t\twidgetMetaMap.delete(wrapper.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet wrapperChildren = _idToChildrenWrappers.get(wrapper.id);\n\t\t\t\t\tif (wrapperChildren) {\n\t\t\t\t\t\twrappers.push(...wrapperChildren);\n\t\t\t\t\t}\n\t\t\t\t\tif (isBodyWrapper(wrapper) || isHeadWrapper(wrapper)) {\n\t\t\t\t\t\tspecialIds.push(wrapper.id);\n\t\t\t\t\t} else if (specialIds.indexOf(wrapper.parentId) !== -1) {\n\t\t\t\t\t\tif (isWNodeWrapper(wrapper) || isVirtualWrapper(wrapper)) {\n\t\t\t\t\t\t\tspecialIds.push(wrapper.id);\n\t\t\t\t\t\t} else if (wrapper.domNode && wrapper.domNode.parentNode) {\n\t\t\t\t\t\t\twrapper.domNode.parentNode.removeChild(wrapper.domNode);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t_idToChildrenWrappers.delete(wrapper.id);\n\t\t\t\t\t_idToWrapperMap.delete(wrapper.id);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tdom: { type: 'delete', current }\n\t\t};\n\t}\n\n\treturn {\n\t\tmount,\n\t\tunmount,\n\t\tinvalidate\n\t};\n}\n\nexport default renderer;\n","import { create, tsx } from \"@dojo/framework/core/vdom\";\n\nimport * as css from \"./styles/Hello.m.css\";\n\ninterface HelloProperties {\n  name: string;\n}\n\nconst factory = create().properties<HelloProperties>();\n\nexport const Hello = factory(function({ properties }) {\n  const { name } = properties();\n  return <h1 classes={[css.root]}>{`Hello, ${name}`}</h1>;\n});\n\nexport default Hello;\n","import { renderer, create, tsx } from '@dojo/framework/core/vdom';\n\nimport Hello from './widgets/Hello';\n\nconst factory = create();\n\nconst App = factory(function App() {\n\treturn (\n\t\t<div>\n\t\t\t<Hello name=\"Dojo CodeSandbox\"/>\n\t\t\t<h2>{'Start editing to see some magic happen \\u2728'}</h2>\n\t\t</div>\n\t);\n});\n\nconst r = renderer(() => <App />);\nr.mount();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"dojo-codesandbox-template/Hello\",\"root\":\"Hello-m__root__b408c039Tjs\"};"],"sourceRoot":""}